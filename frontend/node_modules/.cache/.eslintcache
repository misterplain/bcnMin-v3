[{"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/index.js":"1","/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/App.js":"2","/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/pages/Create.js":"3","/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/pages/Notes.js":"4","/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/components/Layout.js":"5","/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/components/NoteCard.js":"6","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/index.js":"7","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/App.js":"8","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/store.js":"9","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Login.js":"10","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Register.js":"11","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Layout.js":"12","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Favorites.js":"13","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/utils/setAuthToken.js":"14","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/reducetips.js":"15","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/reduceproducts.js":"16","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/reducewaste.js":"17","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/collab.js":"18","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/tools.js":"19","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Header.js":"20","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Collab.js":"21","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Modal.js":"22","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/actions/userActions.js":"23","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/constants/userConstants.js":"24","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Inform.js":"25","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Connect.js":"26","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/InformFavButton.js":"27","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Reduce.js":"28","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Rescue.js":"29","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/reducers/userReducers.js":"30","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Title.js":"31","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Tech.js":"32"},{"size":455,"mtime":1613409201000,"results":"33","hashOfConfig":"34"},{"size":953,"mtime":1613409201000,"results":"35","hashOfConfig":"34"},{"size":3339,"mtime":1613409201000,"results":"36","hashOfConfig":"34"},{"size":897,"mtime":1613409201000,"results":"37","hashOfConfig":"34"},{"size":3229,"mtime":1613409201000,"results":"38","hashOfConfig":"34"},{"size":1558,"mtime":1613409201000,"results":"39","hashOfConfig":"34"},{"size":566,"mtime":1662061974535,"results":"40","hashOfConfig":"41"},{"size":1950,"mtime":1662063617574,"results":"42","hashOfConfig":"41"},{"size":743,"mtime":1662063448776,"results":"43","hashOfConfig":"41"},{"size":3433,"mtime":1662064562512,"results":"44","hashOfConfig":"41"},{"size":5144,"mtime":1662064801358,"results":"45","hashOfConfig":"41"},{"size":8533,"mtime":1662064149582,"results":"46","hashOfConfig":"41"},{"size":2677,"mtime":1659724927914,"results":"47","hashOfConfig":"41"},{"size":348,"mtime":1656614201556,"results":"48","hashOfConfig":"41"},{"size":365,"mtime":1655125232851,"results":"49","hashOfConfig":"41"},{"size":2076,"mtime":1655125232852,"results":"50","hashOfConfig":"41"},{"size":1125,"mtime":1655125232850,"results":"51","hashOfConfig":"41"},{"size":629,"mtime":1655125232854,"results":"52","hashOfConfig":"41"},{"size":834,"mtime":1655125232850,"results":"53","hashOfConfig":"41"},{"size":2328,"mtime":1659724228116,"results":"54","hashOfConfig":"41"},{"size":7416,"mtime":1662062772272,"results":"55","hashOfConfig":"41"},{"size":948,"mtime":1658382359501,"results":"56","hashOfConfig":"41"},{"size":2430,"mtime":1662064840901,"results":"57","hashOfConfig":"41"},{"size":429,"mtime":1662061159950,"results":"58","hashOfConfig":"41"},{"size":4462,"mtime":1662064318139,"results":"59","hashOfConfig":"41"},{"size":5834,"mtime":1662064389321,"results":"60","hashOfConfig":"41"},{"size":770,"mtime":1657822212923,"results":"61","hashOfConfig":"41"},{"size":2388,"mtime":1662060961516,"results":"62","hashOfConfig":"41"},{"size":3424,"mtime":1662062810458,"results":"63","hashOfConfig":"41"},{"size":2150,"mtime":1662063188756,"results":"64","hashOfConfig":"41"},{"size":616,"mtime":1657912051939,"results":"65","hashOfConfig":"41"},{"size":7265,"mtime":1662063532960,"results":"66","hashOfConfig":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12uib2h",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"19mdvih",{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/index.js",[],"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/App.js",[],"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/pages/Create.js",["144","145"],"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/pages/Notes.js",["146"],"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/components/Layout.js",["147"],"/Users/patrick/Desktop/Learn/YouTube/3-Material-UI/finished/src/components/NoteCard.js",["148","149","150"],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/index.js",[],["151","152"],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/App.js",["153"],"import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n//components\nimport Inform from \"./pages/Inform\";\nimport Connect from \"./pages/Connect\";\nimport Reduce from \"./pages/Reduce\";\nimport Rescue from \"./pages/Rescue\";\nimport Tech from \"./pages/Tech\";\nimport Collab from \"./pages/Collab\";\nimport Favorites from \"./pages/Favorites\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\n//redux\nimport {useDispatch} from 'react-redux';\nimport {loadUser} from './actions/userActions';\nimport setAuthToken from \"./utils/setAuthToken\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fefefe\",\n    },\n    secondary: purple,\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n});\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(loadUser());\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Routes>\n            <Route exact path='/' element={<Inform />} />\n            <Route path='/connect' element={<Connect />} />\n            <Route path='/reduce' element={<Reduce />} />\n            <Route path='/tech' element={<Tech />} />\n            <Route path='/rescue' element={<Rescue />} />\n            <Route path='/collab' element={<Collab />} />\n            <Route path='/favorites' element={<Favorites />} />\n            <Route path='/login' element={<Login />} />\n            <Route path='/register' element={<Register />} />\n          </Routes>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/store.js",["154"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\n//reducers\nimport {userReducer} from './reducers/userReducers'\n\nconst reducer = combineReducers({\n    user: userReducer,\n});\n\n//userInfo stored in local storage\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {};\n\nconst middlewareList =\n  process.env.NODE_ENV === \"production\" ? [thunk] : [thunk, logger];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewareList))\n);\n\nexport default store;\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Login.js",["155"],"import React from \"react\";\nimport { Button, TextField, Typography, Grid } from \"@material-ui/core\";\nimport { Navigate } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n//redux\nimport { login } from \"../actions/userActions\";\nimport { useSelector } from \"react-redux\";\nimport {useNavigate} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  textField: {\n    margin: \"10px\",\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nconst validationSchema = Yup.object({\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string()\n    .min(6)\n    .required(\"Please provide a password of at least 6 characters\"),\n});\n\nconst Login = () => {\n  const styles = useStyles();\nconst navigate = useNavigate();\n\nconst user = useSelector((state) => state.user);\nconst {loading, isAuthenticated} = user;\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      console.log(formik.errors);\n      login({ email: values.email, password: values.password });\n    },\n  });\n\n  //redirect if logged in\n  if (isAuthenticated) {\n    return <Navigate to='/' />;\n  }\n\n  return (\n    <Grid container spacing={1} direction='column'>\n      <Grid item xs={12}>\n        <Title title={\"login\"} />\n      </Grid>\n      <Grid item xs={12} md={8} className={styles.formContainer}>\n        <form onSubmit={formik.handleSubmit} className={styles.form}>\n          <TextField\n            onChange={formik.handleChange}\n            className={styles.textField}\n            label='Email'\n            id='email'\n            name='email'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.email}\n            helperText={\n              formik.errors.email && formik.touched.email\n                ? formik.errors.email\n                : null\n            }\n          />\n          <TextField\n            onChange={formik.handleChange}\n            className={styles.textField}\n            label='Password'\n            id='password'\n            name='password'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.password}\n            helperText={\n              formik.errors.password && formik.touched.password\n                ? formik.errors.password\n                : null\n            }\n          />\n          <Button\n            type='submit'\n            variant='contained'\n            color='success'\n            className={styles.formButton}\n          >\n            Login\n          </Button>\n        </form>\n      </Grid>\n      <Grid item xs={12} className={styles.registerLine}>\n        <Typography />\n        Don't have an account?\n        <Button onClick={() => navigate(\"/register\")}>Register Now</Button>\n        <Typography />{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Register.js",["156","157","158","159","160","161","162","163","164","165","166"],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Layout.js",["167","168","169","170"],"import * as React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Header from './Header'\nimport Box from \"@mui/material/Box\";\nimport Divider from \"@mui/material/Divider\";\nimport Drawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\n//redux and responsive buttons if logged in\nimport {useDispatch, useSelector} from 'react-redux'\nimport { logout } from \"../actions/userActions\";\nimport PropTypes from \"prop-types\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2),\n    },\n    test: {\n      color: \"white\",\n      width: \"100%\",\n    },\n    testAppBar: {\n      backgroundColor: \"green\",\n    },\n  };\n});\n\nfunction Layout2({ children }, props) {\n  const { window } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\nconst navigate = useNavigate();\n  const location = useLocation();\n  const user = useSelector((state) => state.user);\n  const {loading, isAuthenticated} = user;\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (link) => {\n    setAnchorEl(null);\n    navigate(`/${link}`);\n  };\n\n  const logoutAndRedirect = () => {\n    setAnchorEl(null);\n    logout();\n    navigate(\"/\");\n  }\n\n  const menuItems = [\n    {\n      text: \"Inform\",\n      icon: <AddCircleOutlineOutlined color='success' />,\n      path: \"/\",\n    },\n    {\n      text: \"Connect\",\n      icon: <AddCircleOutlineOutlined color='success' />,\n      path: \"/connect\",\n    },\n    // {\n    //   text: \"Reduce\",\n    //   icon: <AddCircleOutlineOutlined color='ssuccess' />,\n    //   path: \"/reduce\",\n    // },\n    {\n      text: \"Tech\",\n      icon: <AddCircleOutlineOutlined color='success' />,\n      path: \"/tech\",\n    },\n    {\n      text: \"Rescue\",\n      icon: <AddCircleOutlineOutlined color='success' />,\n      path: \"/rescue\",\n    },\n    {\n      text: \"Collab\",\n      icon: <AddCircleOutlineOutlined color='success' />,\n      path: \"/collab\",\n    },\n  ];\n\n  const drawer = (\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: \"center\" }}>\n      <Typography variant='h6' sx={{ my: 2 }}>\n        bcnMinimalista\n      </Typography>\n      <Divider />\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            key={item.text}\n            disablePadding\n            onClick={() => navigate(item.path)}\n          >\n            <ListItemButton sx={{ textAlign: \"center\" }}>\n              <ListItemText primary={item.text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n        {!loading && isAuthenticated ? (\n          <>\n            <ListItem onClick={() => navigate(\"/favorites\")}>\n              <ListItemButton sx={{ textAlign: \"center\" }}>\n                <ListItemText primary='Favorites' />\n              </ListItemButton>\n            </ListItem>\n            <ListItem onClick={() => logoutAndRedirect()}>\n              {\" \"}\n              <ListItemButton sx={{ textAlign: \"center\" }}>\n                <ListItemText primary='Logout' />\n              </ListItemButton>\n            </ListItem>\n          </>\n        ) : (\n          <>\n            <ListItem onClick={() => navigate(\"/login\")}>\n              {\" \"}\n              <ListItemButton sx={{ textAlign: \"center\" }}>\n                <ListItemText primary='Login' />\n              </ListItemButton>\n            </ListItem>\n            <ListItem onClick={() => navigate(\"/register\")}>\n              <ListItemButton sx={{ textAlign: \"center\" }}>\n                <ListItemText primary='Register' />\n              </ListItemButton>\n            </ListItem>\n          </>\n        )}\n      </List>\n    </Box>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <AppBar component='nav' style={{marginBottom:250}}>\n        <Header/>\n        <Toolbar className={classes.testAppBar}>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            edge='start'\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: \"none\" } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Box\n            sx={{ display: { xs: \"none\", sm: \"flex\" } }}\n            className={classes.test}\n          >\n            {menuItems.map((item) => (\n              <ListItem\n                key={item.text}\n                disablePadding\n                onClick={() => navigate(item.path)}\n              >\n                <ListItemButton sx={{ textAlign: \"center\" }}>\n                  <ListItemText primary={item.text} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n\n            <IconButton\n              size='large'\n              aria-label='account of current user'\n              aria-controls='menu-appbar'\n              aria-haspopup='true'\n              onClick={handleMenu}\n              color='inherit'\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id='menu-appbar'\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {!loading && isAuthenticated ? (\n                <>\n                  <MenuItem onClick={() => handleClose(\"favorites\")}>\n                    Favorites\n                  </MenuItem>\n                  <MenuItem onClick={() => logoutAndRedirect()}>\n                    Logout\n                  </MenuItem>\n                </>\n              ) : (\n                <>\n                  <MenuItem onClick={() => handleClose(\"login\")}>\n                    Login\n                  </MenuItem>\n                  <MenuItem onClick={() => handleClose(\"register\")}>\n                    Register\n                  </MenuItem>\n                </>\n              )}\n            </Menu>\n          </Box>\n          \n        </Toolbar>\n      </AppBar>\n      <Box component='nav'>\n        <Drawer\n          container={container}\n          variant='temporary'\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: \"block\", sm: \"none\" },\n            \"& .MuiDrawer-paper\": {\n              boxSizing: \"border-box\",\n              width: drawerWidth,\n            },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n      <Box component='main' sx={{ p: 3, mt: '140px', width: '100%' }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nLayout2.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  error: state.error,\n});\n\nexport default Layout2\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Favorites.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/utils/setAuthToken.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/reducetips.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/reduceproducts.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/reducewaste.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/collab.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/shared/tools.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Header.js",["171"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport YouTubeIcon from \"@mui/icons-material/YouTube\";\n\nconst useStyles = makeStyles({\n  headerContainer: {\n    padding: \"10px\",\n    textAlign: \"center\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    marginBottom: \"0px\",\n    position: \"sticky\",\n    height: \"60px\",\n  },\n  headerContent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    width: \"100%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  headerTitle: {\n    fontSize: \"35px\",\n  },\n  iconGroup: {\n    color: \"inherit\",\n  },\n  icon: {\n    color: \"black\",\n    marginTop: \"17px\",\n    marginLeft: \"10px\",\n    fontSize: \"large\",\n  },\n});\n\nconst Header = () => {\n  const styles = useStyles();\n  return (\n    <div className={styles.headerContainer}>\n      <span className={styles.headerContent}>\n        <div className={styles.headerTitle}>bcnMinimalista - </div>{\" \"}\n        <div className={styles.iconGroup}>\n          <a href='http://instagram.com/' target='_blank' rel='noreferrer'>\n            <InstagramIcon\n              fontSize='large'\n              sx={{ marginTop: \"10px\", marginLeft: \"10px\", color: \"black\" }}\n            />\n          </a>\n          <a href='http://facebook.com/' target='_blank' rel='noreferrer'>\n            <FacebookIcon\n              fontSize='large'\n              sx={{ marginTop: \"10px\", marginLeft: \"10px\", color: \"black\" }}\n            />\n          </a>\n          <a href='http://twitter.com/' target='_blank' rel='noreferrer'>\n            <TwitterIcon\n              fontSize='large'\n              sx={{ marginTop: \"10px\", marginLeft: \"10px\", color: \"black\" }}\n            />\n          </a>\n          <a href='http://youtube.com/' target='_blank' rel='noreferrer'>\n\n            <YouTubeIcon\n              fontSize='large'\n              sx={{ marginTop: \"10px\", marginLeft: \"10px\", color: \"black\" }}\n            />\n          </a>\n        </div>\n      </span>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Collab.js",["172","173","174","175"],"import React, { useState } from \"react\";\nimport { COLLAB } from \"../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Button,\n  Fade,\n  Box,\n  Typography,\n  TextField,\n  FormGroup,\n  FormControlLabel,\n  FormControl,\n  Grid\n} from \"@material-ui/core\";\nimport Link from \"@mui/material/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"../components/Modal\";\n//redux\nimport { connect } from \"react-redux\";\n\nconst collab = COLLAB;\n\nconst useStyles = makeStyles({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  formContainer: {\n    width: \"70%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"90%\",\n  },\n  collabList: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"20px\",\n  },\n  collabCard: {\n    textDecoration: \"none\",\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"green\",\n    margin: \"3px\",\n    borderRadius: \"10px\",\n  },\n});\n\n//modal style\nconst style = {\n  position: \"rela\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Your name should have more than 3 characters\")\n    .required(\"Required\"),\n  phoneNum: Yup.string()\n    .min(\n      9,\n      \"Phone number should have more than 3 characters, please include country code\"\n    )\n    .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string()\n    .min(2, \"You can do better than that\")\n    .required(\"Required\"),\n});\n\nconst Collab = (props) => {\n  const styles = useStyles();\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message,\n      });\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  //modal state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n  return (\n    <>\n      <Grid container className={styles.container} xs={12} sm={12} md={12}>\n        <Grid item xs={12} sm={12} md={12} className={styles.formContainer}>\n          <form onSubmit={formik.handleSubmit} className={styles.form}>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <TextField\n                    name='name'\n                    label='Name'\n                    variant='outlined'\n                    color='success'\n                    fullWidth\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    className=''\n                  />\n                }\n              />\n\n              {formik.errors.name && formik.touched.name ? (\n                <div className='collab__errors'>{formik.errors.name}</div>\n              ) : null}\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <TextField\n                      type='number'\n                      name='phoneNum'\n                      label='Phone Number (optional)'\n                      variant='outlined'\n                      color='success'\n                      fullWidth\n                      value={formik.values.phoneNum}\n                      onChange={formik.handleChange}\n                      className='form-control'\n                    />\n                  }\n                />\n\n                {/* {formik.errors.phoneNum && formik.touched.phoneNum ? (\n                <div className=\"collab__errors\">{formik.errors.phoneNum}</div>\n              ) : null} */}\n              </FormGroup>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <TextField\n                      type='text'\n                      name='email'\n                      label='Email'\n                      variant='outlined'\n                      color='success'\n                      fullWidth\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                      className='form-control'\n                    />\n                  }\n                />\n\n                {formik.errors.email && formik.touched.email ? (\n                  <div className='collab__errors'>{formik.errors.email}</div>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <TextField\n                      type='text'\n                      name='message'\n                      label='Enter your message here'\n                      rows='4'\n                      Multiline={true}\n                      variant='outlined'\n                      color='success'\n                      fullWidth\n                      value={formik.values.message}\n                      onChange={formik.handleChange}\n                      className='form-control'\n                    />\n                  }\n                />\n\n                {formik.errors.message && formik.touched.message ? (\n                  <div className='collab__errors'>{formik.errors.message}</div>\n                ) : null}\n              </FormGroup>\n            </FormGroup>\n\n            <Button\n              type='submit'\n              onClick={handleOpen}\n              className={styles.button}\n            >\n              Submit feedback\n            </Button>\n          </form>\n        </Grid>\n        <Grid container spacing={3} className={styles.collabList}>\n          {collab.map((collab) => {\n            return (\n              <Grid\n                item\n                xs={11}\n                sm={5}\n                md={2}\n                key={collab.id}\n                className={styles.collabCard}\n              >\n                <Link\n                  href={collab.src}\n                  target='_blank'\n                  rel='noreferrer'\n                  underline='none'\n                  color='inherit'\n                >\n                  <Typography>{collab.name}</Typography>\n                </Link>\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Modal open={open} setOpen={setOpen} onClose={() => setOpen(false)}>\n          <Fade in={open}>\n            <Box sx={style}>\n              <Typography\n                id='transition-modal-title'\n                variant='h6'\n                component='h2'\n              >\n                Your water footprint\n              </Typography>\n              <Typography id='transition-modal-description' sx={{ mt: 2 }}>\n                Your weekly water footprint is year\n              </Typography>\n            </Box>\n          </Fade>\n        </Modal>\n      </Grid>\n    </>\n  );\n};\n\nexport default connect(null)(Collab);\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Modal.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/actions/userActions.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/constants/userConstants.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Inform.js",["176","177","178","179","180","181"],"import React, { useState, useEffect } from \"react\";\nimport InformFavButton from \"../components/InformFavButton\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  Grid,\n  Item,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport PropTypes from \"prop-types\";\nimport { loadUser, updateUser } from \"../actions/userActions.js\";\nimport Title from \"../components/Title\";\n\nconst useStyles = makeStyles({\n  cardContainer: {\n    marginTop: \"2rem\",\n  },\n  card: {\n    border: \"1px solid #e0e0e0\",\n    justifyContent: \"center\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-end\",\n  },\n});\n\nconst Inform = () => {\n  const styles = useStyles();\n  const [blogPost, setBlogPost] = useState([]);\n  const [favorite, setFavorite] = useState(false);\n  const [change, setChange] = useState();\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n  const {loading, isAuthenticated} = user;\n\n  console.log({ user });\n\n  const fetchBlogPosts = () => {\n    axios\n      .get(`${process.env.REACT_APP_API}/v1/api/blog`)\n      .then((response) => {\n        console.log(response.data);\n        setBlogPost(response.data);\n      })\n      .catch((error) => {\n        alert(\"Error in fetching Blog Post Info\", error);\n      });\n  };\n\n  const addFavorite = (blogId) => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API}/v1/api/favorites`,\n        {\n          blog: blogId, // req.body.blog\n        },\n        {\n          headers: {\n            \"x-auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((data) => {\n        // setChange((previousChange) => !previousChange);\n        dispatch(updateUser({ blogId, isAddToFavorite: true }));\n      })\n      .catch((e) => console.log(e));\n    // setFavorite(true);\n  };\n\n  function deleteFavorite(blogId) {\n    console.log(blogId);\n    axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/favorites/${blogId}`, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((data) => {\n        // setChange((previousChange) => !previousChange);\n        dispatch(updateUser({ blogId, isAddToFavorite: false }));\n      })\n      .catch((e) => console.log(e));\n  }\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [change]);\n\n  useEffect(() => {\n    fetchBlogPosts();\n  }, []);\n\n  return (\n    <Container size='sm'>\n      <Title title={\"news concerning local efforts to minimize\"} />\n      <Grid container spacing={2} className={styles.cardContainer}>\n        {blogPost.map((blogPost) => {\n          return (\n            <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\n              <Card sx={{ maxWidth: 45 }} className={styles.card}>\n                <CardMedia\n                  component='img'\n                  height='150'\n                  image={blogPost.img}\n                  alt='green iguana'\n                />\n                <CardContent className={styles.cardContent}>\n                  <Typography gutterBottom variant='h5' component='div'>\n                    {blogPost.title}\n                  </Typography>\n                  <Typography variant='body2' color='text.secondary'>\n                    {blogPost.caption}\n                  </Typography>{\" \"}\n                  <CardActions>\n                    {isAuthenticated && !loading && (\n                      <div>\n                        <InformFavButton\n                          onAddFavorite={() => addFavorite(blogPost._id)}\n                          onDeleteFavorite={() => deleteFavorite(blogPost._id)}\n                          blogPost={blogPost}\n                        />\n                      </div>\n                    )}\n\n                    <Button size='small' href={blogPost.src} target='__blank'>\n                      Learn More\n                    </Button>\n                  </CardActions>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n};\n\nInform.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  error: state.error,\n});\n\nexport default Inform\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Connect.js",["182","183","184","185","186","187"],"import React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Box,\n  Grid\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n//redux and responsive buttons if logged in\nimport Title from \"../components/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { loadUser } from \"../actions/userActions.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  commentForm: {\n    width: \"90%\",\n    marginTop: \"10px\",\n    textAlign: \"center\",\n  },\n  commentButton: {\n    marginRight: \"10px\",\n  },\n  commentList: {\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: \"auto\",\n  },\n  comment: {\n    borderRadius: \"20px\",\n    margin: \"10px\",\n  },\n  username: {\n    color: \"purple\",\n  },\n  commentText: {\n    marginBottom: \"0px\",\n    fontSize: \"1.7rem\",\n  },\n});\n\nconst Connect = () => {\n  const styles = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const commentsList = useSelector((state) => state.comments);\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n  const {loading, isAuthenticated} = user;\n\n  useEffect(() => {\n    dispatch(loadUser());\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API}/v1/api/comments`\n      );\n      console.log(response.data);\n      dispatch({ type: \"FETCH_COMMENTS\", payload: response.data });\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    console.log(id);\n    await axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`)\n      .then((res) => console.log(\"comment deleted\" + res.data))\n      .catch((err) => console.log(err));\n    dispatch({ type: \"DELETE_COMMENT\", payload: id });\n  };\n\n  const postComment = async (e) => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n      username: user.username,\n    };\n    await axios\n      .post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment)\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err));\n    fetchComments();\n  };\n\n  return (\n    <div className={styles.root}>\n      <Grid\n        container\n        xs={12}\n        sm={11}\n        md={10}\n        maxWidth='md'\n        className={styles.container}\n      >\n        <Grid item xs={12}>\n          <Title title={\"chat with your community\"} />\n        </Grid>\n        <Grid item className={styles.commentForm}>\n          {isAuthenticated ? (\n            <>\n              <form onSubmit={(e) => postComment(e)}>\n                <TextField\n                  onChange={(e) => setComment(e.target.value)}\n                  className=''\n                  label='Comment'\n                  variant='outlined'\n                  color='success'\n                  fullWidth\n                  required\n                  value={comment}\n                />\n\n                <Button\n                  type='submit'\n                  variant='contained'\n                  color='success'\n                  className={styles.commentButton}\n                >\n                  Post Comment\n                </Button>\n              </form>\n            </>\n          ) : (\n            <>\n              <Grid item xs={12} sm={12} md={8} lg={8} xl={6}>\n                <div>Login to post something</div>\n              </Grid>\n            </>\n          )}\n        </Grid>\n        <Grid item className={styles.commentList}>\n          {commentsList?.comments.map((comment) => {\n            return (\n              <>\n                <Card\n                  sx={{ minWidth: 275, transform: \"scale(0.1)\", mx: \"15px\" }}\n                  key={comment?._id}\n                  className={styles.comment}\n                >\n                  <CardContent>\n                    {\" \"}\n                    <Typography className={styles.username}>\n                      {comment?.user.username} says...\n                    </Typography>\n                    <Typography className={styles.commentText}>\n                      {comment?.comment}\n                    </Typography>\n                    <Button\n                        type='submit'\n                        value={comment?._id}\n                        // onClick={() => deleteComment(comment?._id)}\n                      >\n                        Reply\n                      </Button>\n                  </CardContent>{\" \"}\n                  {isAuthenticated && user?._id === comment?.user._id ? (\n                    <CardActions>\n                      <Button\n                        type='submit'\n                        value={comment?._id}\n                        onClick={() => deleteComment(comment?._id)}\n                      >\n                        Delete\n                      </Button>\n                      <Button\n                        type='submit'\n                        value={comment?._id}\n                        // onClick={() => deleteComment(comment?._id)}\n                      >\n                        Edit\n                      </Button>\n                    </CardActions>\n                  ) : null}\n                </Card>\n              </>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\n// Connect.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default Connect\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/InformFavButton.js",["188","189","190"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst InformFavButton = ({ blogPost, onAddFavorite, onDeleteFavorite }) => {\n  const { user = {} } = useSelector((state) => state.auth);\n  const { favorites = [] } = user;\n  let isFavourite = false;\n\n  if (favorites?.includes(blogPost._id)) {\n    isFavourite = true;\n  }\n\n  return (\n    <div>\n      {isFavourite && (\n        <Button size='small' onClick={onDeleteFavorite}>\n          Delete\n        </Button>\n      )}\n      {!isFavourite && (\n        <Button size='small' onClick={onAddFavorite}>\n          Add to Favorites\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default InformFavButton;\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Reduce.js",["191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { REDUCEPRODUCTS } from \"../shared/reduceproducts\";\nimport { REDUCETIPS } from \"../shared/reducetips\";\nimport { REDUCEWASTE } from \"../shared/reducewaste\";\nimport { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Marquee from \"react-fast-marquee\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nimport \"./Reduce.css\";\n\nconst reduceWaste = REDUCEWASTE;\nconst reduceTips = REDUCETIPS;\nconst reduceProducts = REDUCEPRODUCTS;\n\nconst useStyles = makeStyles({\n  container: {\n    border: \"1px solid black\",\n    minWidth: \"600px\",\n    display: \"inline-block\",\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  card: {\n    width: '300px',\n    display: 'inline-block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n});\n\nexport default function Reduce() {\n  const styles = useStyles();\n  const [index, setIndex] = useState(0);\n  const product = REDUCEPRODUCTS;\n  const { title, price, src, site, description } = product[index];\n\n  const checkNumber = (number) => {\n    if (number > product.length - 1) {\n      return 0;\n    }\n    if (number < 0) {\n      return product.length - 1;\n    }\n    return number;\n  };\n  const nextPerson = () => {\n    setIndex((index) => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n  const prevPerson = () => {\n    setIndex((index) => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  return (\n    <Container size='sm'>\n      <Card className={styles.card} >\n        <CardActionArea>\n          <CardMedia\n            component='img'\n            height='140'\n            image='/static/images/cards/contemplative-reptile.jpg'\n            alt='green iguana'\n          />\n          <CardContent>\n            <Typography gutterBottom variant='h5' component='div'>\n              Lizard\n            </Typography>\n            <Typography variant='body2' color='text.secondary'>\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Container>\n  );\n}\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Rescue.js",["204","205"],"import React, { useState } from \"react\";\nimport { Grid, Typography, Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"../components/Title\";\nimport \"./Rescue.css\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  }\n});\n\nexport default function Rescue() {\n  const styles = useStyles();\n  return (\n    <Grid container xs={12} sm={11} md={10} className={styles.container}>\n      <Grid item className={styles.title}>\n        <Title title={\"adopt, don't shop.\"} />\n        <Typography variant=\"h6\" component=\"div\" gutterBottom>Reduce your carbon pawprint by sharing your love and resources with\n            animals in need </Typography>\n      </Grid>\n\n      <div className='rescue__container'>\n        <div className='card-container-rescue'>\n          <div className='card-rescue'>\n            <a\n              href={\"https://ajuntament.barcelona.cat/benestaranimal/\"}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/d/d6/Cat_plotting_something_evil%21.jpg'\n                alt='cat'\n              />\n              <div className='card__head'>CAA Compañía de Barcelona</div>\n            </a>\n          </div>\n          <div className='card-rescue'>\n            <a\n              href={\"http://www.gatsdegracia.cat/\"}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/False_alarm_-a.jpg/1280px-False_alarm_-a.jpg'\n                alt='cat'\n              />\n              <div className='card__head'>Gats De Gràcia</div>\n            </a>\n          </div>\n          <div className='card-rescue'>\n            <a\n              href={\"https://www.eljardinetdelsgats.org/es/\"}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Neugierige-Katze.JPG/1280px-Neugierige-Katze.JPG'\n                alt='cat'\n              />\n              <div className='card__head'>El Jardinet dels Gats</div>\n            </a>\n          </div>\n          <div className='card-rescue'>\n            <a\n              href={\"https://www.altarriba.org/\"}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/Al_acecho_%289272124788%29.jpg/1280px-Al_acecho_%289272124788%29.jpg'\n                alt='cat'\n              />\n              <div className='card__head'>Amigos de Los Animales</div>\n            </a>\n          </div>\n          <div className='card-rescue'>\n            <a\n              href={\"https://www.catshopbyadira.com/\"}\n              target='_blank'\n              rel='noreferrer'\n            >\n              <img\n                src='https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/Mimi%26Tigsi.jpg/1280px-Mimi%26Tigsi.jpg'\n                alt='cat'\n              />\n              <div className='card__head'>Sede ADiRA BCN</div>\n            </a>\n          </div>\n        </div>\n      </div>\n    </Grid>\n  );\n}\n","/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/reducers/userReducers.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/components/Title.js",[],"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Tech.js",["206","207"],"import React, { useState } from \"react\";\nimport { Typography, Button, TextField, Box, Grid } from \"@material-ui/core\";\nimport Link from \"@mui/material/Link\";\nimport Fade from \"@mui/material/Fade\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Title from \"../components/Title\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TOOLS } from \"../shared/tools\";\nimport Modal from \"../components/Modal\";\n\nconst tools = TOOLS;\n\n//modal style\nconst style = {\n  position: \"rela\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst useSyles = makeStyles({\n  container: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  intro: {\n    width: \"100%\",\n    margin: \"15px\",\n    fontSize: \"2.5rem\",\n  },\n  textField: {\n    margin: \"10px\",\n  },\n  formButton:{\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n  },\n  toolsContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"20px\",\n  },\n  techCard: {\n    textDecoration: \"none\",\n    textAlign: \"center\",\n    color: \"white\",\n    backgroundColor: \"green\",\n    margin: \"3px\",\n    borderRadius: \"10px\",\n  },\n});\n\nconst validationSchema = Yup.object({\n  kilometers: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n  fastFashion: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n  flightHours: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n  meat: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n});\n\nconst Tech = () => {\n  const styles = useSyles();\n  const [answer, setAnswer] = useState(0);\n\n  const formik = useFormik({\n    initialValues: {\n      kilometers: \"\",\n      fastFashion: \"\",\n      flightHours: \"\",\n      meat: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setAnswer(\n        values.kilometers * 1.2 +\n          values.fastFashion * 100.96 +\n          values.flightHours * 24 +\n          values.meat * 125\n      );\n      console.log(answer);\n      resetForm();\n      handleOpen();\n    },\n  });\n\n  let answerMonth = answer * 4;\n  let answerYear = answer * 52;\n\n  //modal state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Grid\n      container\n      xs={12}\n      sm={11}\n      md={10}\n      maxWidth='md'\n      className={styles.container}\n    >\n      <Grid item xs={12}>\n        <Title title={\"water footprint calculator\"} />\n      </Grid>\n      <Grid item className={styles.intro}>\n        <Typography>\n          Megacorporations must be held accountable for their contribution to\n          global warming through policy and taxation, don’t lose sight of that!\n          However, on an individual basis, it’s helpful to check in on your part\n          too. Check in below with your water footprint, measured in gallons of\n          water.\n        </Typography>\n      </Grid>\n\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          className={styles.textField}\n          label='kilometers driver per week on average'\n          id='kilometers'\n          variant='outlined'\n          color='success'\n          fullWidth\n          value={formik.values.kilometers}\n          onChange={formik.handleChange}\n          helperText={\n            formik.errors.kilometers && formik.touched.kilometers ? (\n              <div className=''>{formik.errors.kilometers}</div>\n            ) : null\n          }\n        />\n\n        <TextField\n          className={styles.textField}\n          label='Fast Fashion items purchased per year'\n          id='fastFashion'\n          variant='outlined'\n          color='success'\n          fullWidth\n          value={formik.values.fastFashion}\n          onChange={formik.handleChange}\n          helperText={\n            formik.errors.fastFashion && formik.touched.fastFashion ? (\n              <div className=''>{formik.errors.fastFashion}</div>\n            ) : null\n          }\n        />\n\n        <TextField\n          className={styles.textField}\n          label='Flight Hours over the course of a year'\n          id='flightHours'\n          variant='outlined'\n          color='success'\n          fullWidth\n          value={formik.values.flightHours}\n          onChange={formik.handleChange}\n          helperText={\n            formik.errors.flightHours && formik.touched.flightHours ? (\n              <div className=''>{formik.errors.flightHours}</div>\n            ) : null\n          }\n        />\n\n        <TextField\n          className={styles.textField}\n          label='Servings of meat consumed per week'\n          id='meat'\n          variant='outlined'\n          color='success'\n          fullWidth\n          value={formik.values.meat}\n          onChange={formik.handleChange}\n          helperText={\n            formik.errors.meat && formik.touched.meat ? (\n              <div className=''>{formik.errors.meat}</div>\n            ) : null\n          }\n        />\n\n        <Button type='submit' className={styles.formButton}>Check Footprint</Button>\n        <Modal open={open} setOpen={setOpen} onClose={() => setOpen(false)}>\n          <Fade in={open}>\n            <Box sx={style}>\n              <Typography\n                id='transition-modal-title'\n                variant='h6'\n                component='h2'\n              >\n                Your water footprint\n              </Typography>\n              <Typography id='transition-modal-description' sx={{ mt: 2 }}>\n                Your weekly water footprint is {answer} which is {answerMonth}{\" \"}\n                over the course of a month and {answerYear} over the course of a\n                year\n              </Typography>\n            </Box>\n          </Fade>\n        </Modal>\n      </form>\n      <Grid container spacing={3} className={styles.toolsContainer}>\n        <Grid item xs={12}>\n          <Title title={\"tools to help you minimize\"} />\n        </Grid>\n        {tools.map((tools) => {\n          return (\n            <Grid\n              item\n              xs={11}\n              sm={5}\n              md={2}\n              key={tools.id}\n              className={styles.techCard}\n            >\n              <Link\n                href={tools.src}\n                target='_blank'\n                rel='noreferrer'\n                underline='none'\n                color='inherit'\n              >\n                <Typography>{tools.name}</Typography>\n              </Link>\n            </Grid>\n          );\n        })}\n      </Grid>\n      {/* <Box sx={{ flexGrow: 1 }}>\n        <Grid\n          container\n          spacing={{ xs: 2, md: 3 }}\n          columns={{ xs: 4, sm: 8, md: 12 }}\n        >\n          {tools.map((tools) => (\n            <Grid item xs={2} sm={4} md={4} key={tools.id}>\n              <Typography>{tools.name}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </Box> */}\n    </Grid>\n  );\n};\n\nexport default Tech;\n",{"ruleId":"208","severity":1,"message":"209","line":37,"column":15,"nodeType":"210","messageId":"211","endLine":37,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":40,"column":17,"nodeType":"210","messageId":"211","endLine":40,"endColumn":19},{"ruleId":"208","severity":1,"message":"212","line":19,"column":51,"nodeType":"210","messageId":"211","endLine":19,"endColumn":53},{"ruleId":"208","severity":1,"message":"209","line":110,"column":44,"nodeType":"210","messageId":"211","endLine":110,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":15,"column":25,"nodeType":"210","messageId":"211","endLine":15,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":18,"column":25,"nodeType":"210","messageId":"211","endLine":18,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":21,"column":25,"nodeType":"210","messageId":"211","endLine":21,"endColumn":27},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":46,"column":6,"nodeType":"219","endLine":46,"endColumn":8,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":14,"column":7,"nodeType":"223","messageId":"224","endLine":14,"endColumn":26},{"ruleId":"221","severity":1,"message":"225","line":52,"column":8,"nodeType":"223","messageId":"224","endLine":52,"endColumn":15},{"ruleId":"221","severity":1,"message":"226","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":18},{"ruleId":"221","severity":1,"message":"227","line":13,"column":8,"nodeType":"223","messageId":"224","endLine":13,"endColumn":17},{"ruleId":"221","severity":1,"message":"228","line":58,"column":10,"nodeType":"223","messageId":"224","endLine":58,"endColumn":18},{"ruleId":"221","severity":1,"message":"229","line":58,"column":20,"nodeType":"223","messageId":"224","endLine":58,"endColumn":31},{"ruleId":"221","severity":1,"message":"230","line":59,"column":10,"nodeType":"223","messageId":"224","endLine":59,"endColumn":15},{"ruleId":"221","severity":1,"message":"231","line":59,"column":17,"nodeType":"223","messageId":"224","endLine":59,"endColumn":25},{"ruleId":"221","severity":1,"message":"232","line":60,"column":10,"nodeType":"223","messageId":"224","endLine":60,"endColumn":18},{"ruleId":"221","severity":1,"message":"233","line":60,"column":20,"nodeType":"223","messageId":"224","endLine":60,"endColumn":31},{"ruleId":"221","severity":1,"message":"234","line":61,"column":10,"nodeType":"223","messageId":"224","endLine":61,"endColumn":19},{"ruleId":"221","severity":1,"message":"235","line":61,"column":21,"nodeType":"223","messageId":"224","endLine":61,"endColumn":33},{"ruleId":"221","severity":1,"message":"225","line":66,"column":11,"nodeType":"223","messageId":"224","endLine":66,"endColumn":18},{"ruleId":"221","severity":1,"message":"236","line":19,"column":36,"nodeType":"223","messageId":"224","endLine":19,"endColumn":51},{"ruleId":"221","severity":1,"message":"237","line":21,"column":9,"nodeType":"223","messageId":"224","endLine":21,"endColumn":20},{"ruleId":"221","severity":1,"message":"238","line":75,"column":9,"nodeType":"223","messageId":"224","endLine":75,"endColumn":17},{"ruleId":"221","severity":1,"message":"239","line":301,"column":7,"nodeType":"223","messageId":"224","endLine":301,"endColumn":22},{"ruleId":"221","severity":1,"message":"240","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":14},{"ruleId":"221","severity":1,"message":"241","line":13,"column":3,"nodeType":"223","messageId":"224","endLine":13,"endColumn":14},{"ruleId":"221","severity":1,"message":"242","line":88,"column":10,"nodeType":"223","messageId":"224","endLine":88,"endColumn":17},{"ruleId":"221","severity":1,"message":"243","line":112,"column":9,"nodeType":"223","messageId":"224","endLine":112,"endColumn":20},{"ruleId":"221","severity":1,"message":"244","line":114,"column":9,"nodeType":"223","messageId":"224","endLine":114,"endColumn":21},{"ruleId":"221","severity":1,"message":"245","line":11,"column":3,"nodeType":"223","messageId":"224","endLine":11,"endColumn":7},{"ruleId":"221","severity":1,"message":"246","line":41,"column":10,"nodeType":"223","messageId":"224","endLine":41,"endColumn":18},{"ruleId":"221","severity":1,"message":"247","line":41,"column":20,"nodeType":"223","messageId":"224","endLine":41,"endColumn":31},{"ruleId":"221","severity":1,"message":"248","line":42,"column":18,"nodeType":"223","messageId":"224","endLine":42,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":100,"column":6,"nodeType":"219","endLine":100,"endColumn":14,"suggestions":"249"},{"ruleId":"221","severity":1,"message":"239","line":157,"column":7,"nodeType":"223","messageId":"224","endLine":157,"endColumn":22},{"ruleId":"221","severity":1,"message":"250","line":8,"column":3,"nodeType":"223","messageId":"224","endLine":8,"endColumn":6},{"ruleId":"221","severity":1,"message":"251","line":61,"column":10,"nodeType":"223","messageId":"224","endLine":61,"endColumn":18},{"ruleId":"221","severity":1,"message":"252","line":61,"column":20,"nodeType":"223","messageId":"224","endLine":61,"endColumn":31},{"ruleId":"221","severity":1,"message":"225","line":66,"column":10,"nodeType":"223","messageId":"224","endLine":66,"endColumn":17},{"ruleId":"217","severity":1,"message":"253","line":71,"column":6,"nodeType":"219","endLine":71,"endColumn":8,"suggestions":"254"},{"ruleId":"221","severity":1,"message":"239","line":211,"column":7,"nodeType":"223","messageId":"224","endLine":211,"endColumn":22},{"ruleId":"221","severity":1,"message":"255","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"256","line":1,"column":28,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"257","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":13},{"ruleId":"221","severity":1,"message":"258","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":15},{"ruleId":"221","severity":1,"message":"259","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":23},{"ruleId":"221","severity":1,"message":"260","line":10,"column":25,"nodeType":"223","messageId":"224","endLine":10,"endColumn":39},{"ruleId":"221","severity":1,"message":"261","line":13,"column":7,"nodeType":"223","messageId":"224","endLine":13,"endColumn":18},{"ruleId":"221","severity":1,"message":"262","line":14,"column":7,"nodeType":"223","messageId":"224","endLine":14,"endColumn":17},{"ruleId":"221","severity":1,"message":"263","line":15,"column":7,"nodeType":"223","messageId":"224","endLine":15,"endColumn":21},{"ruleId":"221","severity":1,"message":"264","line":37,"column":11,"nodeType":"223","messageId":"224","endLine":37,"endColumn":16},{"ruleId":"221","severity":1,"message":"265","line":37,"column":18,"nodeType":"223","messageId":"224","endLine":37,"endColumn":23},{"ruleId":"221","severity":1,"message":"266","line":37,"column":25,"nodeType":"223","messageId":"224","endLine":37,"endColumn":28},{"ruleId":"221","severity":1,"message":"267","line":37,"column":30,"nodeType":"223","messageId":"224","endLine":37,"endColumn":34},{"ruleId":"221","severity":1,"message":"268","line":37,"column":36,"nodeType":"223","messageId":"224","endLine":37,"endColumn":47},{"ruleId":"221","severity":1,"message":"269","line":48,"column":9,"nodeType":"223","messageId":"224","endLine":48,"endColumn":19},{"ruleId":"221","severity":1,"message":"270","line":54,"column":9,"nodeType":"223","messageId":"224","endLine":54,"endColumn":19},{"ruleId":"221","severity":1,"message":"256","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"271","line":2,"column":28,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"272","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":17},{"ruleId":"221","severity":1,"message":"243","line":112,"column":9,"nodeType":"223","messageId":"224","endLine":112,"endColumn":20},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-native-reassign",["273"],"no-negated-in-lhs",["274"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["275"],"no-unused-vars","'userInfoFromStorage' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Redirect' is defined but never used.","'PropTypes' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'password2' is assigned a value but never used.","'setPassword2' is assigned a value but never used.","'SubjectOutlined' is defined but never used.","'useDispatch' is defined but never used.","'location' is assigned a value but never used.","'mapStateToProps' is assigned a value but never used.","'Link' is defined but never used.","'FormControl' is defined but never used.","'contact' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'triggerAlert' is assigned a value but never used.","'Item' is defined but never used.","'favorite' is assigned a value but never used.","'setFavorite' is assigned a value but never used.","'setChange' is assigned a value but never used.",["276"],"'Box' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchComments'. Either include them or remove the dependency array.",["277"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Marquee' is defined but never used.","'FaChevronLeft' is defined but never used.","'FaChevronRight' is defined but never used.","'reduceWaste' is assigned a value but never used.","'reduceTips' is assigned a value but never used.","'reduceProducts' is assigned a value but never used.","'title' is assigned a value but never used.","'price' is assigned a value but never used.","'src' is assigned a value but never used.","'site' is assigned a value but never used.","'description' is assigned a value but never used.","'nextPerson' is assigned a value but never used.","'prevPerson' is assigned a value but never used.","'Card' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [dispatch]",{"range":"284","text":"285"},"Update the dependencies array to be: [change, dispatch]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch, fetchComments]",{"range":"288","text":"289"},[1217,1219],"[dispatch]",[2549,2557],"[change, dispatch]",[1569,1571],"[dispatch, fetchComments]"]