{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect/Connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Card, CardContent, CardActions, Typography, Box, Grid } from \"@material-ui/core\";\nimport axios from \"axios\"; //redux and responsive buttons if logged in\n\nimport PropTypes from \"prop-types\";\nimport Title from \"../../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { loadUser } from \"../../store/actions/auth.js\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    border: \"1px solid black\"\n  }\n});\n\nconst Connect = ({\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const {\n    user = {}\n  } = useSelector(state => state.auth);\n  const commentsList = useSelector(state => state.comments);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadUser());\n    fetchComments();\n  }, []);\n  console.log(comments);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API}/v1/api/comments`);\n      console.log(response.data);\n      dispatch({\n        type: 'FETCH_COMMENTS',\n        payload: response.data\n      });\n      setComments(commentsList);\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  };\n\n  const deleteComment = async id => {\n    console.log(id);\n    await axios.delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`).then(res => console.log(\"comment deleted\")).catch(err => console.log(err));\n    dispatch({\n      type: 'DELETE_COMMENT',\n      payload: id\n    });\n  };\n\n  const postComment = async e => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n      username: user.username\n    };\n    await axios.post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment).then(res => console.log(res.data));\n    dispatch({\n      type: 'ADD_COMMENT',\n      payload: {\n        newComment\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: \"chat with your community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: true,\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => postComment(e),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setComment(e.target.value),\n            className: \"\",\n            label: \"Comment\",\n            variant: \"outlined\",\n            color: \"success\",\n            fullWidth: true,\n            required: true,\n            value: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"success\",\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Login to post something\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"comments section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [commentsList === null || commentsList === void 0 ? void 0 : commentsList.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minWidth: 275\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: comment === null || comment === void 0 ? void 0 : comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: comment === null || comment === void 0 ? void 0 : comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), \" \", isAuthenticated && (user === null || user === void 0 ? void 0 : user._id) === (comment === null || comment === void 0 ? void 0 : comment.user._id) ? /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                value: comment === null || comment === void 0 ? void 0 : comment._id,\n                onClick: () => deleteComment(comment === null || comment === void 0 ? void 0 : comment._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this) : null]\n          }, comment === null || comment === void 0 ? void 0 : comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Connect, \"VJL2X0+ebzucHovjO/B+3NLKzls=\", false, function () {\n  return [useStyles, useSelector, useSelector, useDispatch];\n});\n\n_c = Connect;\nConnect.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect/Connect.js"],"names":["React","useEffect","useState","TextField","Button","Card","CardContent","CardActions","Typography","Box","Grid","axios","PropTypes","Title","makeStyles","loadUser","connect","useSelector","useDispatch","useStyles","container","border","Connect","auth","isAuthenticated","loading","classes","comment","setComment","comments","setComments","user","state","commentsList","dispatch","fetchComments","console","log","response","get","process","env","REACT_APP_API","data","type","payload","err","deleteComment","id","delete","then","res","catch","postComment","e","preventDefault","newComment","username","post","target","value","justifyContent","map","minWidth","_id","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Box,\n  Grid,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n//redux and responsive buttons if logged in\nimport PropTypes from \"prop-types\";\nimport Title from \"../../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { loadUser } from \"../../store/actions/auth.js\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  container: {\n    border: \"1px solid black\",\n  },\n});\n\nconst Connect = ({ auth: { isAuthenticated, loading } }) => {\n  const classes = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const { user = {} } = useSelector((state) => state.auth);\n  const  commentsList = useSelector((state) => state.comments);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadUser());\n    fetchComments()\n  }, []);\n\n  console.log(comments)\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API}/v1/api/comments`\n      );\n      console.log(response.data)\n      dispatch({type: 'FETCH_COMMENTS', payload: response.data})\n      setComments(commentsList)\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    console.log(id);\n    await axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`)\n      .then((res) => console.log(\"comment deleted\"))\n      .catch((err) => console.log(err));\n      dispatch({type: 'DELETE_COMMENT', payload: id})\n  };\n\n  const postComment = async (e) => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n      username: user.username,\n    };\n    await axios\n      .post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment)\n      .then((res) => console.log(res.data));\n      dispatch({type: 'ADD_COMMENT', payload: {newComment}})\n  };\n\n  return (\n    <Grid\n      container\n      direction='row'\n      alignItems='center'\n      justifyContent='center'\n      className={classes.container}\n    >\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n        <Title title={\"chat with your community\"} />{\" \"}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        direction='column'\n        alignItems='center'\n        justifyContent='center'\n        flex\n      >\n        {isAuthenticated ? (\n          <>\n            <h1>Add Comment</h1>\n            <form onSubmit={(e) => postComment(e)}>\n              <TextField\n                onChange={(e) => setComment(e.target.value)}\n                className=''\n                label='Comment'\n                variant='outlined'\n                color='success'\n                fullWidth\n                required\n                value={comment}\n              />\n\n              <Button type='submit' variant='contained' color='success'>\n                Post Comment\n              </Button>\n            </form>\n          </>\n        ) : (\n          <>\n            <Grid item sx={{ justifyContent: \"center\" }}>\n              <div>Login to post something</div>\n            </Grid>\n          </>\n        )}\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n        <h1>comments section</h1>\n      </Grid>\n      <Grid item>\n        {commentsList?.comments.map((comment) => {\n          return (\n            <>\n              <Card sx={{ minWidth: 275 }} key={comment?._id}>\n                <CardContent>\n                  <Typography variant='h5' component='div'>\n                    {comment?.comment}\n                  </Typography>\n                  <Typography variant='h5' component='div'>\n                    {comment?.username}\n                  </Typography>\n\n                </CardContent>{\" \"}\n                {isAuthenticated && user?._id === comment?.user._id ? (\n                  <CardActions>\n                    <Button\n                      type='submit'\n                      value={comment?._id}\n                      onClick={() => deleteComment(comment?._id)}\n                    >\n                      Delete\n                    </Button>\n                  </CardActions>\n                ) : null}\n              </Card>\n            </>\n          );\n        })}{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nConnect.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n"]},"metadata":{},"sourceType":"module"}