{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Tech.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Typography, FormControlLabel, Button, TextField, FormLabel, FormControl } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  kilometers: Yup.string().required(\"Required. If none, impressive, you may set to 0\"),\n  fastFashion: Yup.string().required(\"Required. If none, impressive, you may set to 0\"),\n  flightHours: Yup.string().required(\"Required. If none, impressive, you may set to 0\"),\n  meat: Yup.string().required(\"Required. If none, impressive, you may set to 0\")\n});\n\nconst Tech = () => {\n  _s();\n\n  const [answer, setAnswer] = useState(0);\n  const formik = useFormik({\n    initialValues: {\n      kilometers: \"\",\n      fastFashion: \"\",\n      flightHours: \"\",\n      meat: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setAnswer(values.kilometers * 1.2 + values.fastFashion * 100.96 + values.flightHours * 24 + values.meat * 125);\n      console.log(answer);\n      resetForm();\n    }\n  });\n  let answerMonth = answer * 4;\n  let answerYear = answer * 52;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\" \", \"Megacorporations must be held accountable for their contribution to global warming through policy and taxation, don\\u2019t lose sight of that! However, on an individual basis, it\\u2019s helpful to check in on your part too. Check in below with your water footprint, measured in gallons of water.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"\",\n        label: \"kilometers\",\n        id: \"kilometers\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        value: formik.values.kilometers,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), formik.errors.kilometers && formik.touched.kilometers ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: formik.errors.kilometers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"\",\n        label: \"fastFashion\",\n        id: \"fastFashion\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        value: formik.values.fastFashion,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), formik.errors.fastFashion && formik.touched.fastFashion ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: formik.errors.fastFashion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"\",\n        label: \"flightHours\",\n        id: \"flightHours\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        value: formik.values.flightHours,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), formik.errors.flightHours && formik.touched.flightHours ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: formik.errors.flightHours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"\",\n        label: \"meat\",\n        id: \"meat\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        value: formik.values.meat,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), formik.errors.meat && formik.touched.meat ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: formik.errors.meat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Check Footprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Your weekly water footprint is \", answer, \" which is \", answerMonth, \" over the course of a month and \", answerYear, \" over the course of a year\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tech, \"sqFQc6G0mv6Sd+cLuan7PRpsRnw=\", false, function () {\n  return [useFormik];\n});\n\n_c = Tech;\nexport default Tech;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tech\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Tech.js"],"names":["React","useState","Typography","FormControlLabel","Button","TextField","FormLabel","FormControl","Container","useFormik","Yup","validationSchema","object","kilometers","string","required","fastFashion","flightHours","meat","Tech","answer","setAnswer","formik","initialValues","onSubmit","values","resetForm","console","log","answerMonth","answerYear","handleSubmit","handleChange","errors","touched"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,WANF,QAOO,mBAPP;AAQA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AAClCC,EAAAA,UAAU,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,CACV,iDADU,CADsB;AAIlCC,EAAAA,WAAW,EAAEN,GAAG,CAACI,MAAJ,GAAaC,QAAb,CACX,iDADW,CAJqB;AAOlCE,EAAAA,WAAW,EAAEP,GAAG,CAACI,MAAJ,GAAaC,QAAb,CACX,iDADW,CAPqB;AAUlCG,EAAAA,IAAI,EAAER,GAAG,CAACI,MAAJ,GAAaC,QAAb,CACJ,iDADI;AAV4B,CAAX,CAAzB;;AAeA,MAAMI,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMqB,MAAM,GAAGb,SAAS,CAAC;AACvBc,IAAAA,aAAa,EAAE;AACbV,MAAAA,UAAU,EAAE,EADC;AAEbG,MAAAA,WAAW,EAAE,EAFA;AAGbC,MAAAA,WAAW,EAAE,EAHA;AAIbC,MAAAA,IAAI,EAAE;AAJO,KADQ;AAOvBP,IAAAA,gBAPuB;AAQvBa,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA2B;AACnCL,MAAAA,SAAS,CACPI,MAAM,CAACZ,UAAP,GAAoB,GAApB,GACEY,MAAM,CAACT,WAAP,GAAqB,MADvB,GAEES,MAAM,CAACR,WAAP,GAAqB,EAFvB,GAGEQ,MAAM,CAACP,IAAP,GAAc,GAJT,CAAT;AAMAS,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAM,MAAAA,SAAS;AACV;AAjBsB,GAAD,CAAxB;AAoBA,MAAIG,WAAW,GAAGT,MAAM,GAAG,CAA3B;AACA,MAAIU,UAAU,GAAGV,MAAM,GAAG,EAA1B;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,IAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA,iBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAM,MAAA,QAAQ,EAAEE,MAAM,CAACS,YAAvB;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,SAAS,EAAC,EADZ;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,EAAE,EAAC,YAHL;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,KAAK,EAAC,WALR;AAME,QAAA,SAAS,MANX;AAQE,QAAA,KAAK,EAAET,MAAM,CAACG,MAAP,CAAcZ,UARvB;AASE,QAAA,QAAQ,EAAES,MAAM,CAACU;AATnB;AAAA;AAAA;AAAA;AAAA,cADF,EAYGV,MAAM,CAACW,MAAP,CAAcpB,UAAd,IAA4BS,MAAM,CAACY,OAAP,CAAerB,UAA3C,gBACC;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,kBAAmBS,MAAM,CAACW,MAAP,CAAcpB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAdN,eAeU,QAAC,SAAD;AACN,QAAA,SAAS,EAAC,EADJ;AAEN,QAAA,KAAK,EAAC,aAFA;AAGN,QAAA,EAAE,EAAC,aAHG;AAIN,QAAA,OAAO,EAAC,UAJF;AAKN,QAAA,KAAK,EAAC,WALA;AAMN,QAAA,SAAS,MANH;AAQN,QAAA,KAAK,EAAES,MAAM,CAACG,MAAP,CAAcT,WARf;AASN,QAAA,QAAQ,EAAEM,MAAM,CAACU;AATX;AAAA;AAAA;AAAA;AAAA,cAfV,EA0BGV,MAAM,CAACW,MAAP,CAAcjB,WAAd,IAA6BM,MAAM,CAACY,OAAP,CAAelB,WAA5C,gBACC;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,kBAAmBM,MAAM,CAACW,MAAP,CAAcjB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IA5BN,eA6BU,QAAC,SAAD;AACN,QAAA,SAAS,EAAC,EADJ;AAEN,QAAA,KAAK,EAAC,aAFA;AAGN,QAAA,EAAE,EAAC,aAHG;AAIN,QAAA,OAAO,EAAC,UAJF;AAKN,QAAA,KAAK,EAAC,WALA;AAMN,QAAA,SAAS,MANH;AAQN,QAAA,KAAK,EAAEM,MAAM,CAACG,MAAP,CAAcR,WARf;AASN,QAAA,QAAQ,EAAEK,MAAM,CAACU;AATX;AAAA;AAAA;AAAA;AAAA,cA7BV,EAwCGV,MAAM,CAACW,MAAP,CAAchB,WAAd,IAA6BK,MAAM,CAACY,OAAP,CAAejB,WAA5C,gBACC;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,kBAAmBK,MAAM,CAACW,MAAP,CAAchB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IA1CN,eA2CU,QAAC,SAAD;AACN,QAAA,SAAS,EAAC,EADJ;AAEN,QAAA,KAAK,EAAC,MAFA;AAGN,QAAA,EAAE,EAAC,MAHG;AAIN,QAAA,OAAO,EAAC,UAJF;AAKN,QAAA,KAAK,EAAC,WALA;AAMN,QAAA,SAAS,MANH;AAQN,QAAA,KAAK,EAAEK,MAAM,CAACG,MAAP,CAAcP,IARf;AASN,QAAA,QAAQ,EAAEI,MAAM,CAACU;AATX;AAAA;AAAA;AAAA;AAAA,cA3CV,EAsDGV,MAAM,CAACW,MAAP,CAAcf,IAAd,IAAsBI,MAAM,CAACY,OAAP,CAAehB,IAArC,gBACC;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,kBAAmBI,MAAM,CAACW,MAAP,CAAcf;AAAjC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAxDN,eAyDN,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzDM;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAqEE,QAAC,UAAD;AAAA,oDAA4CE,MAA5C,gBAA8DS,WAA9D,sCAA2GC,UAA3G;AAAA;AAAA;AAAA;AAAA;AAAA,YArEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyED,CAlGD;;GAAMX,I;UAEWV,S;;;KAFXU,I;AAoGN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Typography,\n  FormControlLabel,\n  Button,\n  TextField,\n  FormLabel,\n  FormControl,\n} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst validationSchema = Yup.object({\n  kilometers: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n  fastFashion: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n  flightHours: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n  meat: Yup.string().required(\n    \"Required. If none, impressive, you may set to 0\"\n  ),\n});\n\nconst Tech = () => {\n  const [answer, setAnswer] = useState(0);\n  const formik = useFormik({\n    initialValues: {\n      kilometers: \"\",\n      fastFashion: \"\",\n      flightHours: \"\",\n      meat: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setAnswer(\n        values.kilometers * 1.2 +\n          values.fastFashion * 100.96 +\n          values.flightHours * 24 +\n          values.meat * 125\n      );\n      console.log(answer);\n      resetForm();\n    },\n  });\n\n  let answerMonth = answer * 4;\n  let answerYear = answer * 52;\n\n  return (\n    <Container size='sm'>\n      <h1>Tech</h1>\n      <Typography>\n        {\" \"}\n        Megacorporations must be held accountable for their contribution to\n        global warming through policy and taxation, don’t lose sight of that!\n        However, on an individual basis, it’s helpful to check in on your part\n        too. Check in below with your water footprint, measured in gallons of\n        water.\n      </Typography>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          className=''\n          label='kilometers'\n          id='kilometers'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          \n          value={formik.values.kilometers}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.kilometers && formik.touched.kilometers ? (\n          <div className=''>{formik.errors.kilometers}</div>\n        ) : null}\n                <TextField\n          className=''\n          label='fastFashion'\n          id='fastFashion'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          \n          value={formik.values.fastFashion}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.fastFashion && formik.touched.fastFashion ? (\n          <div className=''>{formik.errors.fastFashion}</div>\n        ) : null}\n                <TextField\n          className=''\n          label='flightHours'\n          id='flightHours'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          \n          value={formik.values.flightHours}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.flightHours && formik.touched.flightHours ? (\n          <div className=''>{formik.errors.flightHours}</div>\n        ) : null}\n                <TextField\n          className=''\n          label='meat'\n          id='meat'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n         \n          value={formik.values.meat}\n          onChange={formik.handleChange}\n        />\n        {formik.errors.meat && formik.touched.meat ? (\n          <div className=''>{formik.errors.meat}</div>\n        ) : null}\n<Button type=\"submit\">Check Footprint</Button>\n      </form>\n      <Typography>Your weekly water footprint is {answer} which is {answerMonth} over the course of a month and {answerYear} over the course of a year</Typography>\n    </Container>\n  );\n};\n\nexport default Tech;\n"]},"metadata":{},"sourceType":"module"}