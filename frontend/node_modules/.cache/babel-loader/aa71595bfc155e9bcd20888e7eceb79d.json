{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect, useNavigate } from \"react-router-dom\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { Navigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Title from \"../components/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { register } from \"../actions/userActions\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\"\n  },\n  textField: {\n    margin: \"10px\"\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\"\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  error: {\n    color: \"red\",\n    marginTop: \"0px\",\n    marginLeft: \"30px\"\n  }\n});\nconst validationSchema = Yup.object({\n  username: Yup.string().required(\"Please provide a username\"),\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string().min(6).required(\"Please provide a password of at least 6 characters\"),\n  password2: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n});\n\nconst Register = () => {\n  _s();\n\n  const styles = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const navigate = useNavigate();\n  const user = useSelector(state => state.user);\n  const {\n    loading,\n    isAuthenticated\n  } = user;\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      console.log(values);\n      register({\n        username: values.username,\n        email: values.email,\n        password: values.password\n      });\n    }\n  }); //redirect if logged in\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/inform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        title: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: formik.handleChange,\n          id: \"username\",\n          name: \"username\",\n          className: styles.textField,\n          label: \"Username\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: formik.values.username,\n          helperText: formik.errors.username && formik.touched.username ? formik.errors.username : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: formik.handleChange,\n          id: \"email\",\n          name: \"email\",\n          className: styles.textField,\n          label: \"Email\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: formik.values.email,\n          helperText: formik.errors.email && formik.touched.email ? formik.errors.email : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: formik.handleChange,\n          id: \"password\",\n          name: \"password\",\n          className: styles.textField,\n          label: \"Password\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: formik.values.password,\n          helperText: formik.errors.password && formik.touched.password ? formik.errors.password : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: formik.handleChange,\n          id: \"password2\",\n          name: \"password2\",\n          className: styles.textField,\n          label: \"Confirm Password\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: formik.values.password2,\n          helperText: formik.errors.password2 && formik.touched.password2 ? formik.errors.password2 : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          className: styles.formButton,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.registerLine,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), \"Already have an account?\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(\"/login\"),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"fhsrpyOCYTmV9N1KhLv6QEOIzBM=\", false, function () {\n  return [useStyles, useNavigate, useSelector, useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/pages/Register.js"],"names":["React","useState","Redirect","useNavigate","Button","Grid","Typography","Navigate","Yup","useFormik","TextField","Title","makeStyles","useSelector","useDispatch","register","PropTypes","useStyles","formContainer","display","marginLeft","marginRight","width","justifyContent","textField","margin","formButton","marginTop","registerLine","alignItems","error","color","validationSchema","object","username","string","required","email","password","min","password2","oneOf","ref","Register","styles","setUsername","setEmail","setPassword","setPassword2","navigate","user","state","loading","isAuthenticated","formik","initialValues","onSubmit","values","resetForm","console","log","handleSubmit","handleChange","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect, useNavigate } from \"react-router-dom\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { Navigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Title from \"../components/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { register } from \"../actions/userActions\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  textField: {\n    margin: \"10px\",\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  error: {\n    color: \"red\",\n    marginTop: \"0px\",\n    marginLeft: \"30px\",\n  },\n});\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required(\"Please provide a username\"),\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string()\n    .min(6)\n    .required(\"Please provide a password of at least 6 characters\"),\n  password2: Yup.string().oneOf(\n    [Yup.ref(\"password\"), null],\n    \"Passwords must match\"\n  ),\n});\n\nconst Register = () => {\n  const styles = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const navigate = useNavigate();\n\n  const user = useSelector((state) => state.user);\n  const {loading, isAuthenticated} = user;\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      console.log(values);\n      register({\n        username: values.username,\n        email: values.email,\n        password: values.password,\n      });\n    },\n  });\n\n  //redirect if logged in\n  if (isAuthenticated) {\n    return <Navigate to='/inform' />;\n  }\n  return (\n    <Grid container spacing={1} direction='column'>\n      <Grid item xs={12}>\n        <Title title='register' />\n      </Grid>\n      <Grid item xs={12} md={8} className={styles.formContainer}>\n        <form onSubmit={formik.handleSubmit}>\n          <TextField\n            onChange={formik.handleChange}\n            id='username'\n            name='username'\n            className={styles.textField}\n            label='Username'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.username}\n            helperText={\n              formik.errors.username && formik.touched.username\n                ? formik.errors.username\n                : null\n            }\n          />\n          <TextField\n            onChange={formik.handleChange}\n            id='email'\n            name='email'\n            className={styles.textField}\n            label='Email'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.email}\n            helperText={\n              formik.errors.email && formik.touched.email\n                ? formik.errors.email\n                : null\n            }\n          />\n          <TextField\n            onChange={formik.handleChange}\n            id='password'\n            name='password'\n            className={styles.textField}\n            label='Password'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.password}\n            helperText={\n              formik.errors.password && formik.touched.password\n                ? formik.errors.password\n                : null\n            }\n          />\n          <TextField\n            onChange={formik.handleChange}\n            id='password2'\n            name='password2'\n            className={styles.textField}\n            label='Confirm Password'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.password2}\n            helperText={\n              formik.errors.password2 && formik.touched.password2\n                ? formik.errors.password2\n                : null\n            }\n          />\n          <Button\n            type='submit'\n            variant='contained'\n            color='success'\n            className={styles.formButton}\n          >\n            Register\n          </Button>\n        </form>\n      </Grid>\n      <Grid item xs={12} className={styles.registerLine}>\n        <Typography />\n        Already have an account?\n        <Button onClick={() => navigate(\"/login\")}>Login</Button>\n        <Typography />{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}