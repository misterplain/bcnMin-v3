{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Inform/Inform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport InformFavButton from \"./InformFavButton\";\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadUser, updateUser } from \"../../store/actions/auth.js\";\nimport Title from \"../../ui/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  cardContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    border: \"1px solid black\",\n    justifyContent: \"center\"\n  },\n  card: {\n    display: \"inline-block\",\n    border: \"1px solid #e0e0e0\",\n    margin: 20,\n    flexBasis: \"40%\",\n    justifyContent: \"center\"\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-end\"\n  }\n});\n\nconst Inform = ({\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [blogPost, setBlogPost] = useState([]);\n  const [favorite, setFavorite] = useState(false);\n  const [change, setChange] = useState();\n  const {\n    user = {}\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  console.log({\n    user\n  });\n\n  const fetchBlogPosts = () => {\n    axios.get(`${process.env.REACT_APP_API}/v1/api/blog`).then(response => {\n      console.log(response.data);\n      setBlogPost(response.data);\n    }).catch(error => {\n      alert(\"Error in fetching Blog Post Info\", error);\n    });\n  };\n\n  const addFavorite = blogId => {\n    axios.post(`${process.env.REACT_APP_API}/v1/api/favorites`, {\n      blog: blogId // req.body.blog\n\n    }, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\")\n      }\n    }).then(data => {\n      // setChange((previousChange) => !previousChange);\n      dispatch(updateUser({\n        blogId,\n        isAddToFavorite: true\n      }));\n    }).catch(e => console.log(e)); // setFavorite(true);\n  };\n\n  function deleteFavorite(blogId) {\n    console.log(blogId);\n    axios.delete(`${process.env.REACT_APP_API}/v1/api/favorites/${blogId}`, {\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"token\")\n      }\n    }).then(data => {\n      // setChange((previousChange) => !previousChange);\n      dispatch(updateUser({\n        blogId,\n        isAddToFavorite: false\n      }));\n    }).catch(e => console.log(e));\n  }\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [change]);\n  useEffect(() => {\n    fetchBlogPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Title, {\n      title: \"news concerning local efforts to minimize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Inform, \"GehbOhPaJOEzJUzERGBwwpr79QY=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = Inform;\nInform.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  error: state.error\n});\n\nexport default connect(mapStateToProps)(Inform);\n\nvar _c;\n\n$RefreshReg$(_c, \"Inform\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Inform/Inform.js"],"names":["React","useState","useEffect","InformFavButton","Card","CardActions","CardContent","CardMedia","Button","Typography","useSelector","useDispatch","Container","axios","makeStyles","connect","PropTypes","loadUser","updateUser","Title","useStyles","cardContainer","display","flexWrap","border","justifyContent","card","margin","flexBasis","cardContent","flexDirection","alignItems","Inform","auth","isAuthenticated","loading","classes","blogPost","setBlogPost","favorite","setFavorite","change","setChange","user","state","dispatch","console","log","fetchBlogPosts","get","process","env","REACT_APP_API","then","response","data","catch","error","alert","addFavorite","blogId","post","blog","headers","localStorage","getItem","isAddToFavorite","e","deleteFavorite","delete","propTypes","logout","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport InformFavButton from \"./InformFavButton\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadUser, updateUser } from \"../../store/actions/auth.js\";\nimport Title from \"../../ui/Title\";\n\nconst useStyles = makeStyles({\n  cardContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    border: \"1px solid black\",\n    justifyContent: \"center\",\n  },\n  card: {\n    display: \"inline-block\",\n    border: \"1px solid #e0e0e0\",\n    margin: 20,\n    flexBasis: \"40%\",\n    justifyContent: \"center\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"flex-end\",\n  },\n});\n\nconst Inform = ({ auth: { isAuthenticated, loading } }) => {\n  const classes = useStyles();\n  const [blogPost, setBlogPost] = useState([]);\n  const [favorite, setFavorite] = useState(false);\n  const [change, setChange] = useState();\n\n  const { user = {} } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  console.log({ user });\n\n  const fetchBlogPosts = () => {\n    axios\n      .get(`${process.env.REACT_APP_API}/v1/api/blog`)\n      .then((response) => {\n        console.log(response.data);\n        setBlogPost(response.data);\n      })\n      .catch((error) => {\n        alert(\"Error in fetching Blog Post Info\", error);\n      });\n  };\n\n  const addFavorite = (blogId) => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API}/v1/api/favorites`,\n        {\n          blog: blogId, // req.body.blog\n        },\n        {\n          headers: {\n            \"x-auth-token\": localStorage.getItem(\"token\"),\n          },\n        }\n      )\n      .then((data) => {\n        // setChange((previousChange) => !previousChange);\n        dispatch(updateUser({ blogId, isAddToFavorite: true }));\n      })\n      .catch((e) => console.log(e));\n    // setFavorite(true);\n  };\n\n  function deleteFavorite(blogId) {\n    console.log(blogId);\n    axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/favorites/${blogId}`, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((data) => {\n        // setChange((previousChange) => !previousChange);\n        dispatch(updateUser({ blogId, isAddToFavorite: false }));\n      })\n      .catch((e) => console.log(e));\n  }\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, [change]);\n\n  useEffect(() => {\n    fetchBlogPosts();\n  }, []);\n\n  return (\n    <Container size='sm'>\n      <Title title={\"news concerning local efforts to minimize\"} />\n      {/* <div className={classes.cardContainer}>\n        {blogPost.map((blogPost) => {\n          return (\n            <>\n              <Card sx={{ maxWidth: 45 }} className={classes.card}>\n                <CardMedia\n                  component='img'\n                  height='150'\n                  image={blogPost.img}\n                  alt='green iguana'\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant='h5' component='div'>\n                    {blogPost.title}\n                  </Typography>\n                  <Typography variant='body2' color='text.secondary'>\n                    {blogPost.caption}\n                  </Typography>{\" \"}\n                  <CardActions>\n                    {isAuthenticated && !loading && (\n                      <div>\n                        <InformFavButton\n                          onAddFavorite={() => addFavorite(blogPost._id)}\n                          onDeleteFavorite={() => deleteFavorite(blogPost._id)}\n                          blogPost={blogPost}\n                        />\n                      </div>\n                    )}\n\n                    <Button size='small' href={blogPost.src} target='__blank'>\n                      Learn More\n                    </Button>\n                  </CardActions>\n                </CardContent>\n              </Card>\n            </>\n          );\n        })}\n      </div> */}\n    </Container>\n  );\n};\n\nInform.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps)(Inform);\n"]},"metadata":{},"sourceType":"module"}