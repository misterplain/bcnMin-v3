{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: \"none\"\n  }\n}));\n\nfunction SimpleModal() {\n  _s();\n\n  const [open, setOpen] = useState(false); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [modalData, setData] = useState();\n\n  const CustomModal = ({\n    children\n  }) => {\n    return modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  const handleOpen = index => {\n    setOpen(true);\n    setData(data[index]);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((d, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: \"Click to get the full Modal experience!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          handleOpen(index);\n        },\n        children: d.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CustomModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleModal, \"qsxkR/zRT+N3TQ8cRky6QzPv6co=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleModal;\nexport default SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Modal.js"],"names":["React","useState","makeStyles","Typography","Modal","Button","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","SimpleModal","open","setOpen","modalStyle","modalData","setData","CustomModal","children","handleClose","classes","handleOpen","index","data","map","d","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: \"none\",\n  },\n}));\n\nfunction SimpleModal() {\n  const [open, setOpen] = useState(false);\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [modalData, setData] = useState();\n\n\n  const CustomModal = ({ children }) => {\n    return modalData ? (\n      <Modal\n        aria-labelledby='simple-modal-title'\n        aria-describedby='simple-modal-description'\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          {children}\n          {/* <SimpleModal /> */}\n        </div>\n      </Modal>\n    ) : null;\n  };\n\n  const handleOpen = (index) => {\n    setOpen(true);\n    setData(data[index]);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  return (\n    <div>\n      {data.map((d, index) => (\n        <div>\n          <Typography gutterBottom>\n            Click to get the full Modal experience!\n          </Typography>\n          <Button\n            onClick={() => {\n              handleOpen(index);\n            }}\n          >\n            {d.title}\n          </Button>\n        </div>\n      ))}\n      <CustomModal />\n    </div>\n  );\n}\n\nexport default SimpleModal;\n"]},"metadata":{},"sourceType":"module"}