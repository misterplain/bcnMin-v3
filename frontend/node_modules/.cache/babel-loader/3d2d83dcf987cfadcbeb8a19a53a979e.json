{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\"; //redux and responsive buttons if logged in\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Connect = ({\n  auth: {\n    isAuthenticated,\n    user\n  }\n}) => {\n  _s();\n\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n\n  const fetchComments = () => {\n    axios.get(`${process.env.REACT_APP_API}/v1/api/comments`).then(response => {\n      console.log(response.data);\n      setComments(response.data);\n    }).catch(error => {\n      alert(\"Error in fetching Comments Info\", error);\n    });\n  };\n\n  const deleteComment = async id => {\n    console.log(id);\n    await axios.delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`).then(res => console.log(\"comment deleted\")).catch(err => console.log(err));\n    fetchComments();\n  };\n\n  const postComment = async e => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment\n    };\n    await axios.post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment).then(res => console.log(res.data));\n    console.log(comment);\n    fetchComments();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => postComment(e),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setComment(e.target.value),\n          className: \"\",\n          label: \"Comment\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          fullWidth: true,\n          required: true,\n          value: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login to post something\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"comments section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: isAuthenticated.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            value: comment._id,\n            onClick: () => deleteComment(comment._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Connect, \"ilSrDYlwH1/ubIAvJSMEs+0G7fM=\");\n\n_c = Connect;\nConnect.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect.js"],"names":["React","useEffect","useState","TextField","Button","Container","axios","connect","PropTypes","Connect","auth","isAuthenticated","user","comment","setComment","comments","setComments","fetchComments","get","process","env","REACT_APP_API","then","response","console","log","data","catch","error","alert","deleteComment","id","delete","res","err","postComment","e","preventDefault","newComment","post","target","value","map","username","_id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n//redux and responsive buttons if logged in\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\n\n\nconst Connect = ({auth:{isAuthenticated, user}}) => {\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n\n\n\n\n  const fetchComments = () => {\n    axios\n      .get(`${process.env.REACT_APP_API}/v1/api/comments`)\n      .then((response) => {\n        console.log(response.data);\n        setComments(response.data);\n      })\n      .catch((error) => {\n        alert(\"Error in fetching Comments Info\", error);\n      });\n  };\n\n  const deleteComment = async (id) => {\n    console.log(id);\n    await axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`)\n      .then((res) => console.log(\"comment deleted\"))\n      .catch((err) => console.log(err));\n    fetchComments();\n  };\n\n  const postComment = async (e) => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n    };\n    await axios\n      .post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment)\n      .then((res) => console.log(res.data));\n\n    console.log(comment);\n    fetchComments();\n  };\n\n  return (\n    <Container>\n      <h1>Connect</h1>\n      {isAuthenticated ? (     <> <h1>Add Comment</h1>\n      <form onSubmit={(e) => postComment(e)}>\n        <TextField\n          onChange={(e) => setComment(e.target.value)}\n          className=''\n          label='Comment'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={comment}\n        />\n\n        <Button type='submit' variant='contained' color='secondary'>\n          Post Comment\n        </Button>\n      </form></>) : <h1>Login to post something</h1>}\n\n      <h1>comments section</h1>\n      {comments.map((comment) => {\n        return (\n          <>\n            <div key={comment._id}>\n              <h3>{comment.comment}</h3>\n\n              <h3>{comment.username}</h3>\n            \n              <h3>{isAuthenticated.username}</h3>\n              <Button\n                type='submit'\n                value={comment._id}\n                onClick={() => deleteComment(comment._id)}\n              >\n                Delete\n              </Button>\n            </div>\n          </>\n        );\n      })}\n    </Container>\n  );\n};\n\nConnect.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n"]},"metadata":{},"sourceType":"module"}