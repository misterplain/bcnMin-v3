{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { COLLAB } from \"../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, Backdrop, Fade, Box, Typography, Container } from \"@material-ui/core\"; //redux\n\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-modal/lib/components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst collab = COLLAB; //collab modal\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().min(3, \"Your name should have more than 3 characters\").required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string().min(2, \"You can do better than that\").required(\"Required\")\n});\n\nconst Collab = props => {\n  _s();\n\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message\n      });\n      console.log(values);\n      resetForm();\n    }\n  }); //modal state\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collab__form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formik.values.name,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), formik.errors.name && formik.touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"phoneNum\",\n            value: formik.values.phoneNum,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Enter your message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"message\",\n            rows: \"4\",\n            value: formik.values.message,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), formik.errors.message && formik.touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleOpen,\n          children: \"Submit feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          \"aria-labelledby\": \"transition-modal-title\",\n          \"aria-describedby\": \"transition-modal-description\",\n          open: open,\n          onClose: handleClose,\n          closeAfterTransition: true,\n          BackdropComponent: Backdrop,\n          BackdropProps: {\n            timeout: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: style,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                id: \"transition-modal-title\",\n                variant: \"h6\",\n                component: \"h2\",\n                children: \"Thanks!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                id: \"transition-modal-description\",\n                sx: {\n                  mt: 2\n                },\n                children: \"xsd ASAP!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collab__list\",\n      children: collab.map(collab => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__list-card\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: collab.src,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"collab__list-card-text\",\n              children: collab.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, collab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Collab, \"7USLNZxSNCitMnaiSNUniRNEbbo=\", false, function () {\n  return [useFormik];\n});\n\n_c = Collab;\nCollab.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert\n})(Collab);\n\nvar _c;\n\n$RefreshReg$(_c, \"Collab\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab.js"],"names":["React","useState","COLLAB","useFormik","Yup","Button","Backdrop","Fade","Box","Typography","Container","connect","setAlert","PropTypes","Modal","collab","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","validationSchema","object","name","string","min","required","email","message","Collab","props","contact","setContact","formik","initialValues","phoneNum","onSubmit","values","resetForm","console","log","open","setOpen","handleOpen","handleClose","triggerAlert","handleSubmit","handleChange","errors","touched","timeout","mt","map","src","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { COLLAB } from \"../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Button,\n  Backdrop,\n  Fade,\n  Box,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\n//redux\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"react-modal/lib/components/Modal\";\n\nconst collab = COLLAB;\n\n//collab modal\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Your name should have more than 3 characters\")\n    .required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string()\n    .min(2, \"You can do better than that\")\n    .required(\"Required\"),\n});\n\nconst Collab = (props) => {\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message,\n      });\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  //modal state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n  return (\n    <Container>\n      <div className='collab__form-container'>\n        <form onSubmit={formik.handleSubmit}>\n          <div className='form-group'>\n            <label htmlFor='name'>Name</label>\n            <input\n              type='text'\n              name='name'\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {formik.errors.name && formik.touched.name ? (\n              <div className='collab__errors'>{formik.errors.name}</div>\n            ) : null}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='phone'>Phone (optional)</label>\n            <input\n              type='number'\n              name='phoneNum'\n              value={formik.values.phoneNum}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {/* {formik.errors.phoneNum && formik.touched.phoneNum ? (\n                <div className=\"collab__errors\">{formik.errors.phoneNum}</div>\n              ) : null} */}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='email'>Email</label>\n            <input\n              type='text'\n              name='email'\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {formik.errors.email && formik.touched.email ? (\n              <div className='collab__errors'>{formik.errors.email}</div>\n            ) : null}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='message'>Enter your message here</label>\n            <textarea\n              type='text'\n              name='message'\n              rows='4'\n              value={formik.values.message}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {formik.errors.message && formik.touched.message ? (\n              <div className='collab__errors'>{formik.errors.message}</div>\n            ) : null}\n          </div>\n          <button type='submit' onClick={handleOpen}>\n            Submit feedback\n          </button>\n          <Modal\n            aria-labelledby='transition-modal-title'\n            aria-describedby='transition-modal-description'\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={open}>\n              <Box sx={style}>\n                <Typography\n                  id='transition-modal-title'\n                  variant='h6'\n                  component='h2'\n                >\n                  Thanks!\n                </Typography>\n                <Typography id='transition-modal-description' sx={{ mt: 2 }}>\n                  xsd ASAP!\n                </Typography>\n              </Box>\n            </Fade>\n          </Modal>\n        </form>\n      </div>\n\n      <div className='collab__list'>\n        {collab.map((collab) => {\n          return (\n            <div key={collab.id} className='collab__list-card'>\n              <a href={collab.src} target='_blank' rel='noreferrer'>\n                <p className='collab__list-card-text'>{collab.name}</p>\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    </Container>\n  );\n};\n\nCollab.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert })(Collab);\n"]},"metadata":{},"sourceType":"module"}