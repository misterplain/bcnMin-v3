{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab/Collab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { COLLAB } from \"../../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, Backdrop, Fade, Box, Typography, Container, Modal, TextField, FormGroup, FormGroupLabel, FormControlLabel, Checkbox, FormLabel, FormControl, TextareaAutosize, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst collab = COLLAB;\nconst createStyles = makeStyles({\n  container: {\n    border: \"1px solid #e0e0e0\",\n    width: \"100%\"\n  }\n}); //collab modal\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().min(3, \"Your name should have more than 3 characters\").required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string().min(2, \"You can do better than that\").required(\"Required\")\n});\n\nconst Collab = props => {\n  _s();\n\n  const styles = createStyles();\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message\n      });\n      console.log(values);\n      resetForm();\n    }\n  }); //modal state\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              name: \"name\",\n              label: \"Name\",\n              variant: \"outlined\",\n              color: \"success\",\n              fullWidth: true,\n              value: formik.values.name,\n              onChange: formik.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), formik.errors.name && formik.touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                name: \"phoneNum\",\n                label: \"Phone Number (optional)\",\n                variant: \"outlined\",\n                color: \"success\",\n                fullWidth: true,\n                value: formik.values.phoneNum,\n                onChange: formik.handleChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                name: \"email\",\n                label: \"Email\",\n                variant: \"outlined\",\n                color: \"success\",\n                fullWidth: true,\n                value: formik.values.email,\n                onChange: formik.handleChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__errors\",\n              children: formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"text\",\n                name: \"message\",\n                label: \"Enter your message here\",\n                rows: \"4\",\n                Multiline: true,\n                variant: \"outlined\",\n                color: \"success\",\n                fullWidth: true,\n                value: formik.values.message,\n                onChange: formik.handleChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), formik.errors.message && formik.touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__errors\",\n              children: formik.errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: handleOpen,\n          children: \"Submit feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Collab, \"7USLNZxSNCitMnaiSNUniRNEbbo=\", false, function () {\n  return [useFormik];\n});\n\n_c = Collab;\nexport default connect(null)(Collab);\n\nvar _c;\n\n$RefreshReg$(_c, \"Collab\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab/Collab.js"],"names":["React","useState","COLLAB","useFormik","Yup","Button","Backdrop","Fade","Box","Typography","Container","Modal","TextField","FormGroup","FormGroupLabel","FormControlLabel","Checkbox","FormLabel","FormControl","TextareaAutosize","Grid","makeStyles","connect","PropTypes","collab","createStyles","container","border","width","style","position","top","left","transform","bgcolor","boxShadow","p","validationSchema","object","name","string","min","required","email","message","Collab","props","styles","contact","setContact","formik","initialValues","phoneNum","onSubmit","values","resetForm","console","log","open","setOpen","handleOpen","handleClose","triggerAlert","setAlert","handleSubmit","handleChange","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { COLLAB } from \"../../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Button,\n  Backdrop,\n  Fade,\n  Box,\n  Typography,\n  Container,\n  Modal,\n  TextField,\n  FormGroup,\n  FormGroupLabel,\n  FormControlLabel,\n  Checkbox,\n  FormLabel,\n  FormControl,\n  TextareaAutosize,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst collab = COLLAB;\n\nconst createStyles = makeStyles({\n  container: {\n    border: \"1px solid #e0e0e0\",\n    width: \"100%\",\n  },\n});\n\n//collab modal\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Your name should have more than 3 characters\")\n    .required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string()\n    .min(2, \"You can do better than that\")\n    .required(\"Required\"),\n});\n\nconst Collab = (props) => {\n  const styles = createStyles();\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message,\n      });\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  //modal state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n  return (\n    <Grid container className={styles.container}>\n      <Grid item xs={12} sm={12} md={12} >\n        <FormControl onSubmit={formik.handleSubmit}>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <TextField\n                  type='text'\n                  name='name'\n                  label='Name'\n                  variant='outlined'\n                  color='success'\n                  fullWidth\n                  value={formik.values.name}\n                  onChange={formik.handleChange}\n                  className='form-control'\n                />\n              }\n            />\n\n            {formik.errors.name && formik.touched.name ? (\n              <div className='collab__errors'>{formik.errors.name}</div>\n            ) : null}\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <TextField\n                    type='number'\n                    name='phoneNum'\n                    label='Phone Number (optional)'\n                    variant='outlined'\n                    color='success'\n                    fullWidth\n                    value={formik.values.phoneNum}\n                    onChange={formik.handleChange}\n                    className='form-control'\n                  />\n                }\n              />\n\n              {/* {formik.errors.phoneNum && formik.touched.phoneNum ? (\n                <div className=\"collab__errors\">{formik.errors.phoneNum}</div>\n              ) : null} */}\n            </FormGroup>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <TextField\n                    type='text'\n                    name='email'\n                    label='Email'\n                    variant='outlined'\n                    color='success'\n                    fullWidth\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    className='form-control'\n                  />\n                }\n              />\n\n              {formik.errors.email && formik.touched.email ? (\n                <div className='collab__errors'>{formik.errors.email}</div>\n              ) : null}\n            </FormGroup>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <TextField\n                    type='text'\n                    name='message'\n                    label='Enter your message here'\n                    rows='4'\n                    Multiline={true}\n                    variant='outlined'\n                    color='success'\n                    fullWidth\n                    value={formik.values.message}\n                    onChange={formik.handleChange}\n                    className='form-control'\n                  />\n                }\n              />\n\n              {formik.errors.message && formik.touched.message ? (\n                <div className='collab__errors'>{formik.errors.message}</div>\n              ) : null}\n            </FormGroup>\n          </FormGroup>\n\n          <Button type='submit' onClick={handleOpen}>\n            Submit feedback\n          </Button>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect(null)(Collab);\n"]},"metadata":{},"sourceType":"module"}