{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { userFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Title from \"../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\"\n  },\n  textField: {\n    margin: \"10px\"\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\"\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nconst validationSchema = Yup.object({\n  username: Yup.string().required(\"Please provide a username\"),\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string().required(\"Please provide a password of at least 6 characters\")\n});\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleSubmit = async e => {\n    console.log(username, email, password);\n    e.preventDefault();\n\n    if (username === \"\") {\n      setUsernameError(true);\n    }\n\n    if (email === \"\") {\n      setEmailError(true);\n    }\n\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n\n    register({\n      username,\n      email,\n      password\n    });\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/inform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        title: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setUsername(e.target.value),\n          className: styles.textField,\n          label: \"Username\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: username,\n          error: usernameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setEmail(e.target.value),\n          className: styles.textField,\n          label: \"Email\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: email,\n          error: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setPassword(e.target.value),\n          className: styles.textField,\n          label: \"Password\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: password,\n          error: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setPassword(e.target.value),\n          className: styles.textField,\n          label: \"Confirm Password\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: password,\n          error: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          className: styles.formButton,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.registerLine,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), \"Already have an account?\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(\"/login\"),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"3PgRiPIuRuePCjKJHjz62Vw1OHY=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Register.js"],"names":["React","useState","Redirect","Button","Container","Grid","Typography","useHistory","Yup","userFormik","TextField","Title","makeStyles","connect","register","PropTypes","useStyles","formContainer","display","marginLeft","marginRight","width","justifyContent","textField","margin","formButton","marginTop","registerLine","alignItems","validationSchema","object","username","string","required","email","password","Register","setAlert","isAuthenticated","styles","history","setUsername","setEmail","setPassword","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","handleSubmit","e","console","log","preventDefault","target","value","push","propTypes","func","isRequired","bool","mapStateToProps","state","auth","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { userFormik } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Title from \"../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  textField: {\n    margin: \"10px\",\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required(\"Please provide a username\"),\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string().required(\n    \"Please provide a password of at least 6 characters\"\n  ),\n});\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    console.log(username, email, password);\n    e.preventDefault();\n    if (username === \"\") {\n      setUsernameError(true);\n    }\n    if (email === \"\") {\n      setEmailError(true);\n    }\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n    register({ username, email, password });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/inform' />;\n  }\n\n  return (\n    <Grid container spacing={1} direction='column'>\n      <Grid item xs={12}>\n        <Title title='register' />\n      </Grid>\n      <Grid item xs={12} md={8} className={styles.formContainer}>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            onChange={(e) => setUsername(e.target.value)}\n            className={styles.textField}\n            label='Username'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={username}\n            error={usernameError}\n          />\n          <TextField\n            onChange={(e) => setEmail(e.target.value)}\n            className={styles.textField}\n            label='Email'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={email}\n            error={emailError}\n          />\n          <TextField\n            onChange={(e) => setPassword(e.target.value)}\n            className={styles.textField}\n            label='Password'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={password}\n            error={passwordError}\n          />\n                    <TextField\n            onChange={(e) => setPassword(e.target.value)}\n            className={styles.textField}\n            label='Confirm Password'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={password}\n            error={passwordError}\n          />\n          <Button\n            type='submit'\n            variant='contained'\n            color='success'\n            className={styles.formButton}\n          >\n            Register\n          </Button>\n        </form>\n      </Grid>\n      <Grid item xs={12} className={styles.registerLine}>\n        <Typography />\n        Already have an account?\n        <Button onClick={() => history.push(\"/login\")}>Login</Button>\n        <Typography />{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { register })(Register);\n"]},"metadata":{},"sourceType":"module"}