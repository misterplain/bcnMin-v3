{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { COLLAB } from \"../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\"; //redux\n\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-modal/lib/components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst collab = COLLAB; //collab modal\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().min(3, \"Your name should have more than 3 characters\").required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string().min(2, \"You can do better than that\").required(\"Required\")\n});\n\nconst Collab = props => {\n  _s();\n\n  //modal state\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message\n      });\n      setModalIsOpen(true);\n      console.log(values);\n      resetForm();\n    }\n  });\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collab__form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formik.values.name,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), formik.errors.name && formik.touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"phoneNum\",\n            value: formik.values.phoneNum,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Enter your message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"message\",\n            rows: \"4\",\n            value: formik.values.message,\n            onChange: formik.handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), formik.errors.message && formik.touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__errors\",\n            children: formik.errors.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: handleOpen,\n          children: \"Open modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          \"aria-labelledby\": \"transition-modal-title\",\n          \"aria-describedby\": \"transition-modal-description\",\n          open: open,\n          onClose: handleClose,\n          closeAfterTransition: true,\n          BackdropComponent: Backdrop,\n          BackdropProps: {\n            timeout: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: style,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                id: \"transition-modal-title\",\n                variant: \"h6\",\n                component: \"h2\",\n                children: \"Text in a modal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                id: \"transition-modal-description\",\n                sx: {\n                  mt: 2\n                },\n                children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collab__modal\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        style: {\n          overlay: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: \"white\",\n            overlayClassName: \"inform__modal-suggest\"\n          },\n          content: {\n            position: \"absolute\",\n            top: \"28%\",\n            left: \"10%\",\n            right: \"10%\",\n            bottom: \"30%\",\n            border: \"3px solid green\",\n            background: \"white\",\n            overflow: \"auto\",\n            WebkitOverflowScrolling: \"touch\",\n            borderRadius: \"10px\",\n            outline: \"none\",\n            padding: \"20px\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Thanks for the collab, \", contact.name, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__contact-confirm\",\n              children: [\"We'll contact you at \", contact.email, \" \", contact.phoneNum ? \"or \" + contact.phoneNum : null, \" ASAP!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setModalIsOpen(false);\n              },\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collab__list\",\n      children: collab.map(collab => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__list-card\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: collab.src,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"collab__list-card-text\",\n              children: collab.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, collab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Collab, \"QDy7ol97i8aW++mTkU12R8C8aYs=\", false, function () {\n  return [useFormik];\n});\n\n_c = Collab;\nCollab.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert\n})(Collab);\n\nvar _c;\n\n$RefreshReg$(_c, \"Collab\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab.js"],"names":["React","useState","COLLAB","useFormik","Yup","connect","setAlert","PropTypes","Modal","collab","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","validationSchema","object","name","string","min","required","email","message","Collab","props","open","setOpen","handleOpen","handleClose","contact","setContact","formik","initialValues","phoneNum","onSubmit","values","resetForm","setModalIsOpen","console","log","triggerAlert","handleSubmit","handleChange","errors","touched","Backdrop","timeout","mt","modalIsOpen","overlay","right","bottom","backgroundColor","overlayClassName","content","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","map","src","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { COLLAB } from \"../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n//redux\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"react-modal/lib/components/Modal\";\n\nconst collab = COLLAB;\n\n//collab modal\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Your name should have more than 3 characters\")\n    .required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string()\n    .min(2, \"You can do better than that\")\n    .required(\"Required\"),\n});\n\nconst Collab = (props) => {\n  //modal state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message,\n      });\n      setModalIsOpen(true);\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n  return (\n    <React.Fragment>\n      <div className='collab__form-container'>\n        <form onSubmit={formik.handleSubmit}>\n          <div className='form-group'>\n            <label htmlFor='name'>Name</label>\n            <input\n              type='text'\n              name='name'\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {formik.errors.name && formik.touched.name ? (\n              <div className='collab__errors'>{formik.errors.name}</div>\n            ) : null}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='phone'>Phone (optional)</label>\n            <input\n              type='number'\n              name='phoneNum'\n              value={formik.values.phoneNum}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {/* {formik.errors.phoneNum && formik.touched.phoneNum ? (\n                <div className=\"collab__errors\">{formik.errors.phoneNum}</div>\n              ) : null} */}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='email'>Email</label>\n            <input\n              type='text'\n              name='email'\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {formik.errors.email && formik.touched.email ? (\n              <div className='collab__errors'>{formik.errors.email}</div>\n            ) : null}\n          </div>\n          <div className='form-group'>\n            <label htmlFor='message'>Enter your message here</label>\n            <textarea\n              type='text'\n              name='message'\n              rows='4'\n              value={formik.values.message}\n              onChange={formik.handleChange}\n              className='form-control'\n            />\n            {formik.errors.message && formik.touched.message ? (\n              <div className='collab__errors'>{formik.errors.message}</div>\n            ) : null}\n          </div>\n          <Button type='submit' onClick={handleOpen}>\n            Open modal\n          </Button>\n          <Modal\n            aria-labelledby='transition-modal-title'\n            aria-describedby='transition-modal-description'\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={open}>\n              <Box sx={style}>\n                <Typography\n                  id='transition-modal-title'\n                  variant='h6'\n                  component='h2'\n                >\n                  Text in a modal\n                </Typography>\n                <Typography id='transition-modal-description' sx={{ mt: 2 }}>\n                  Duis mollis, est non commodo luctus, nisi erat porttitor\n                  ligula.\n                </Typography>\n              </Box>\n            </Fade>\n          </Modal>\n        </form>\n      </div>\n\n      <div className='collab__modal'>\n        <Modal\n          isOpen={modalIsOpen}\n          style={{\n            overlay: {\n              position: \"fixed\",\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              backgroundColor: \"white\",\n              overlayClassName: \"inform__modal-suggest\",\n            },\n            content: {\n              position: \"absolute\",\n              top: \"28%\",\n              left: \"10%\",\n              right: \"10%\",\n              bottom: \"30%\",\n              border: \"3px solid green\",\n              background: \"white\",\n              overflow: \"auto\",\n              WebkitOverflowScrolling: \"touch\",\n              borderRadius: \"10px\",\n              outline: \"none\",\n              padding: \"20px\",\n            },\n          }}\n        >\n          <div className='collab__modal'>\n            <div className='collab__modal-header'>\n              <p>Thanks for the collab, {contact.name}!</p>\n            </div>\n            <div className='collab__modal-body'>\n              <div className='collab__contact-confirm'>\n                We'll contact you at {contact.email}{\" \"}\n                {contact.phoneNum ? \"or \" + contact.phoneNum : null} ASAP!\n              </div>\n              <button\n                onClick={() => {\n                  setModalIsOpen(false);\n                }}\n              >\n                close\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n\n      <div className='collab__list'>\n        {collab.map((collab) => {\n          return (\n            <div key={collab.id} className='collab__list-card'>\n              <a href={collab.src} target='_blank' rel='noreferrer'>\n                <p className='collab__list-card-text'>{collab.name}</p>\n              </a>\n            </div>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nCollab.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert })(Collab);\n"]},"metadata":{},"sourceType":"module"}