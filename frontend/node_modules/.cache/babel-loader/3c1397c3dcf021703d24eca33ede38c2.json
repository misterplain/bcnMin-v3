{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography, Grid } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Title from \"../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { login } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    border: \"1px solid black\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\"\n  },\n  form: {\n    border: \"1px solid #ccc\"\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\"\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (email === \"\") {\n      setEmailError(true);\n    }\n\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n\n    login(email, password);\n  }; //redirect if logged in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        title: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => onSubmit(e),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setEmail(e.target.value),\n          className: \"\",\n          label: \"Email\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          fullWidth: true,\n          required: true,\n          value: email,\n          error: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setPassword(e.target.value),\n          className: \"\",\n          label: \"Password\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          fullWidth: true,\n          required: true,\n          value: password,\n          error: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          className: styles.formButton,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.registerLine,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), \"Don't have an account?\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(\"/register\"),\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"xcrjO0n8hgvXbhNNB4iaZ2MfMPc=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Login.js"],"names":["React","useState","Button","TextField","Typography","Grid","Redirect","useHistory","Title","makeStyles","login","connect","PropTypes","useStyles","formContainer","display","border","marginLeft","marginRight","width","form","formButton","marginTop","registerLine","justifyContent","alignItems","Login","isAuthenticated","styles","history","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","onSubmit","e","preventDefault","target","value","push","propTypes","func","isRequired","bool","mapStateToProps","state","auth","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, TextField, Typography, Grid } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Title from \"../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { login } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    border: \"1px solid black\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    \n  },\n  form: {\n    border: \"1px solid #ccc\",\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nconst Login = ({ login, isAuthenticated }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (email === \"\") {\n      setEmailError(true);\n    }\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n    login(email, password);\n  };\n\n  //redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <Grid container spacing={1} direction='column'>\n      <Grid item xs={12}>\n        <Title title={\"login\"} />\n      </Grid>\n      <Grid item xs={12} md={8} className={styles.formContainer}>\n        <form onSubmit={(e) => onSubmit(e)} className={styles.form}>\n          <TextField\n            onChange={(e) => setEmail(e.target.value)}\n            className=''\n            label='Email'\n            variant='outlined'\n            color='secondary'\n            fullWidth\n            required\n            value={email}\n            error={emailError}\n          />\n          <TextField\n            onChange={(e) => setPassword(e.target.value)}\n            className=''\n            label='Password'\n            variant='outlined'\n            color='secondary'\n            fullWidth\n            required\n            value={password}\n            error={passwordError}\n          />\n          <Button\n            type='submit'\n            variant='contained'\n            color='success'\n            className={styles.formButton}\n          >\n            Login\n          </Button>\n        </form>\n      </Grid>\n      <Grid item xs={12} className={styles.registerLine}>\n        <Typography />\n        Don't have an account?\n        <Button onClick={() => history.push(\"/register\")}>Register Now</Button>\n        <Typography />{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}