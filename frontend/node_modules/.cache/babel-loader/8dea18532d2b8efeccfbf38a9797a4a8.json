{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from \"redux-logger\";\nimport thunk from 'redux-thunk';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n}); //userInfo stored in local storage\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst middlewareList = process.env.NODE_ENV === 'production' ? [thunk] : [thunk, logger];\nconst store = createStore(rootReducer, applyMiddleware(...middlewareList));\nexport default store;","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","logger","thunk","reducer","userLogin","userLoginReducer","userRegister","userRegisterReducer","userDetails","userDetailsReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","middlewareList","process","env","NODE_ENV","store","rootReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC5BM,EAAAA,SAAS,EAAEC,gBADiB;AAE5BC,EAAAA,YAAY,EAAEC,mBAFc;AAG5BC,EAAAA,WAAW,EAAEC;AAHe,CAAD,CAA/B,C,CAQE;;AACA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMG,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,CAAChB,KAAD,CAAxC,GAAkD,CAACA,KAAD,EAAQD,MAAR,CAAzE;AAGF,MAAMkB,KAAK,GAAGtB,WAAW,CAACuB,WAAD,EAAcrB,eAAe,CAAC,GAAGgB,cAAJ,CAA7B,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from \"redux-logger\"\nimport thunk from 'redux-thunk';\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n});\n\n\n\n  //userInfo stored in local storage\n  const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\n  const middlewareList = process.env.NODE_ENV === 'production' ? [thunk] : [thunk, logger];\n\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewareList));\n\nexport default store"]},"metadata":{},"sourceType":"module"}