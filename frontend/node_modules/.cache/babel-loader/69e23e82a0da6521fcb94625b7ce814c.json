{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\"; //reducers\n\nimport { userReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  user: userReducer\n}); //userInfo stored in local storage\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {};\nconst middlewareList = process.env.NODE_ENV === \"production\" ? [thunk] : [thunk, logger];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","logger","thunk","userReducer","reducer","user","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","middlewareList","process","env","NODE_ENV","store","middleware"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AAEA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC5BO,EAAAA,IAAI,EAAEF;AADsB,CAAD,CAA/B,C,CAIA;;AACA,MAAMG,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG,EAArB;AAEA,MAAMC,cAAc,GAClBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,CAACb,KAAD,CAAxC,GAAkD,CAACA,KAAD,EAAQD,MAAR,CADpD;AAGA,MAAMe,KAAK,GAAGnB,WAAW,CACvBO,OADuB,EAEvBO,YAFuB,EAGvBX,mBAAmB,CAACD,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeD,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\n//reducers\nimport {userReducer} from './reducers/userReducers'\n\nconst reducer = combineReducers({\n    user: userReducer,\n});\n\n//userInfo stored in local storage\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {};\n\nconst middlewareList =\n  process.env.NODE_ENV === \"production\" ? [thunk] : [thunk, logger];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}