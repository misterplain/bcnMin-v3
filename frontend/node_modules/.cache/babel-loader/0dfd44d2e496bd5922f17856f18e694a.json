{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { Button, TextField, Typography, FormControlLabel, FormLabel, FormControl } from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\"; //redux\n\nimport { login } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (email === \"\") {\n      setEmailError(true);\n    }\n\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n\n    login(email, password);\n  }; //redirect if logged in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/inform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setEmail(e.target.value),\n        className: \"\",\n        label: \"Email\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        value: email,\n        error: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setPassword(e.target.value),\n        className: \"\",\n        label: \"Password\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        value: password,\n        error: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"peeE8F7GLAl/xJTMNIvrVlNLloY=\");\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Login.js"],"names":["React","useState","Container","Button","TextField","Typography","FormControlLabel","FormLabel","FormControl","Link","Redirect","makeStyles","useHistory","login","connect","PropTypes","Login","isAuthenticated","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","onSubmit","e","preventDefault","target","value","propTypes","func","isRequired","bool","mapStateToProps","state","auth","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {\n  Button,\n  TextField,\n  Typography,\n  FormControlLabel,\n  FormLabel,\n  FormControl,\n} from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n//redux\nimport { login } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Login = ({ login, isAuthenticated }) => {\nconst [email, setEmail] = useState(\"\");\nconst [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (email === \"\") {\n      setEmailError(true);\n    }\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n    login(email, password);\n  };\n\n  //redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/inform' />;\n  }\n\n  return (\n    <Container size='sm'>\n      <h1>Login</h1>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <TextField\n          onChange={(e) => setEmail(e.target.value)}\n          className=''\n          label='Email'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={email}\n          error={emailError}\n        />\n        <TextField\n          onChange={(e) => setPassword(e.target.value)}\n          className=''\n          label='Password'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={password}\n          error={passwordError}\n        />\n        <Button type='submit' variant='contained' color='secondary'>\n          Login\n        </Button>\n      </form>\n      <Typography\n      />\n    </Container>\n  );\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}