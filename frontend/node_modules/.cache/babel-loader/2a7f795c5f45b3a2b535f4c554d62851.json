{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { COLLAB } from \"../../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\"; //redux\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-modal/lib/components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst collab = COLLAB;\nconst validationSchema = Yup.object({\n  name: Yup.string().min(3, \"Your name should have more than 3 characters\").required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string().min(2, \"You can do better than that\").required(\"Required\")\n});\n\nconst Collab = props => {\n  _s();\n\n  Modal.setAppElement(document.getElementById(\"root\"));\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message\n      });\n      setModalIsOpen(true);\n      console.log(values);\n      resetForm();\n    }\n  });\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collab-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collab__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__title-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"share your ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__title-caption\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We'd love to hear from you!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collab__form-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            triggerAlert();\n          },\n          children: \"ALERT TEST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collab__form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: formik.values.name,\n              onChange: formik.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), formik.errors.name && formik.touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__errors\",\n              children: formik.errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              children: \"Phone (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"phoneNum\",\n              value: formik.values.phoneNum,\n              onChange: formik.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              value: formik.values.email,\n              onChange: formik.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__errors\",\n              children: formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"Enter your message here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"message\",\n              rows: \"4\",\n              value: formik.values.message,\n              onChange: formik.handleChange,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), formik.errors.message && formik.touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__errors\",\n              children: formik.errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__form-button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collab__modal\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          style: {\n            overlay: {\n              position: \"fixed\",\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              backgroundColor: \"white\",\n              overlayClassName: \"inform__modal-suggest\"\n            },\n            content: {\n              position: \"absolute\",\n              top: \"28%\",\n              left: \"10%\",\n              right: \"10%\",\n              bottom: \"30%\",\n              border: \"3px solid green\",\n              background: \"white\",\n              overflow: \"auto\",\n              WebkitOverflowScrolling: \"touch\",\n              borderRadius: \"10px\",\n              outline: \"none\",\n              padding: \"20px\"\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"collab__modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__modal-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Thanks for the collab, \", contact.name, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"collab__contact-confirm\",\n                children: [\"We'll contact you at \", contact.email, \" \", contact.phoneNum ? \"or \" + contact.phoneNum : null, \" ASAP!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setModalIsOpen(false);\n                },\n                children: \"close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collab__list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__list-header\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"a big shout out to all our collaborators!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__list\",\n          children: collab.map(collab => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__list-card\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: collab.src,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"collab__list-card-text\",\n                  children: collab.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, collab.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Collab, \"RCsuzUqJhXI/W+Afl49yLp2WnN8=\", false, function () {\n  return [useFormik];\n});\n\n_c = Collab;\nCollab.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert\n})(Collab);\n\nvar _c;\n\n$RefreshReg$(_c, \"Collab\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab.js"],"names":["React","useState","COLLAB","useFormik","Yup","connect","PropTypes","Modal","collab","validationSchema","object","name","string","min","required","email","message","Collab","props","setAppElement","document","getElementById","modalIsOpen","setModalIsOpen","contact","setContact","formik","initialValues","phoneNum","onSubmit","values","resetForm","console","log","triggerAlert","setAlert","handleSubmit","handleChange","errors","touched","overlay","position","top","left","right","bottom","backgroundColor","overlayClassName","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","map","src","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { COLLAB } from \"../../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n//redux\nimport { connect } from \"react-redux\";\n\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"react-modal/lib/components/Modal\";\n\n\nconst collab = COLLAB;\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Your name should have more than 3 characters\")\n    .required(\"Required\"),\n  // phoneNum: Yup.string()\n  //   .min(\n  //     9,\n  //     \"Phone number should have more than 3 characters, please include country code\"\n  //   )\n  //   .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string()\n    .min(2, \"You can do better than that\")\n    .required(\"Required\"),\n});\n\nconst Collab = (props) => {\n  Modal.setAppElement(document.getElementById(\"root\"));\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message,\n      });\n      setModalIsOpen(true);\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n  return (\n    <React.Fragment>\n      <div className='collab-container'>\n        <div className='collab__title'>\n          <div className='collab__title-text'>\n            <p>share your ideas</p>\n          </div>\n          <div className='collab__title-caption'>\n            <p>We'd love to hear from you!</p>\n          </div>\n        </div>\n        <div className='collab__form-button'>\n          <button\n            onClick={() => {\n              triggerAlert();\n            }}\n          >\n            ALERT TEST\n          </button>\n        </div>\n        <div className='collab__form-container'>\n          <form onSubmit={formik.handleSubmit}>\n            <div className='form-group'>\n              <label htmlFor='name'>Name</label>\n              <input\n                type='text'\n                name='name'\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                className='form-control'\n              />\n              {formik.errors.name && formik.touched.name ? (\n                <div className='collab__errors'>{formik.errors.name}</div>\n              ) : null}\n            </div>\n            <div className='form-group'>\n              <label htmlFor='phone'>Phone (optional)</label>\n              <input\n                type='number'\n                name='phoneNum'\n                value={formik.values.phoneNum}\n                onChange={formik.handleChange}\n                className='form-control'\n              />\n              {/* {formik.errors.phoneNum && formik.touched.phoneNum ? (\n                <div className=\"collab__errors\">{formik.errors.phoneNum}</div>\n              ) : null} */}\n            </div>\n            <div className='form-group'>\n              <label htmlFor='email'>Email</label>\n              <input\n                type='text'\n                name='email'\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                className='form-control'\n              />\n              {formik.errors.email && formik.touched.email ? (\n                <div className='collab__errors'>{formik.errors.email}</div>\n              ) : null}\n            </div>\n            <div className='form-group'>\n              <label htmlFor='message'>Enter your message here</label>\n              <textarea\n                type='text'\n                name='message'\n                rows='4'\n                value={formik.values.message}\n                onChange={formik.handleChange}\n                className='form-control'\n              />\n              {formik.errors.message && formik.touched.message ? (\n                <div className='collab__errors'>{formik.errors.message}</div>\n              ) : null}\n            </div>\n            <div className='collab__form-button'>\n              <button type='submit'>Send Feedback</button>\n            </div>\n          </form>\n        </div>\n        <div className='collab__modal'>\n          <Modal\n            isOpen={modalIsOpen}\n            style={{\n              overlay: {\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                backgroundColor: \"white\",\n                overlayClassName: \"inform__modal-suggest\",\n              },\n              content: {\n                position: \"absolute\",\n                top: \"28%\",\n                left: \"10%\",\n                right: \"10%\",\n                bottom: \"30%\",\n                border: \"3px solid green\",\n                background: \"white\",\n                overflow: \"auto\",\n                WebkitOverflowScrolling: \"touch\",\n                borderRadius: \"10px\",\n                outline: \"none\",\n                padding: \"20px\",\n              },\n            }}\n          >\n            <div className='collab__modal'>\n              <div className='collab__modal-header'>\n                <p>Thanks for the collab, {contact.name}!</p>\n              </div>\n              <div className='collab__modal-body'>\n                <div className='collab__contact-confirm'>\n                  We'll contact you at {contact.email}{\" \"}\n                  {contact.phoneNum ? \"or \" + contact.phoneNum : null} ASAP!\n                </div>\n                <button\n                  onClick={() => {\n                    setModalIsOpen(false);\n                  }}\n                >\n                  close\n                </button>\n              </div>\n            </div>\n\n            {/* <div>name={contact.name}</div>\n            <div>number={contact.phoneNum}</div>\n            <div>email={contact.email}</div>\n            <div>message={contact.message}</div> */}\n          </Modal>\n        </div>\n        <div className='collab__list-container'>\n          <div className='collab__list-header'>\n            <p>a big shout out to all our collaborators!</p>\n          </div>\n          <div className='collab__list'>\n            {collab.map((collab) => {\n              return (\n                <div key={collab.id} className='collab__list-card'>\n                  <a href={collab.src} target='_blank' rel='noreferrer'>\n                    <p className='collab__list-card-text'>{collab.name}</p>\n                  </a>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCollab.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert })(Collab);\n"]},"metadata":{},"sourceType":"module"}