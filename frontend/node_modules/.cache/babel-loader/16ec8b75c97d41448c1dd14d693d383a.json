{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Card, CardContent, CardActions, Typography, Box, Grid } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\"; //redux and responsive buttons if logged in\n\nimport { connect, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Title from \"./Title\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { loadUser } from \"../actions/auth.js\";\nimport { updateComments } from \"../actions/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    border: \"1px solid black\"\n  }\n});\n\nconst Connect = ({\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const {\n    user = {}\n  } = useSelector(state => state.auth);\n  console.log({\n    user\n  });\n  useEffect(() => {\n    dispatch(loadUser());\n  }, []);\n\n  const fetchComments = () => {\n    const comments = axios.get(`${process.env.REACT_APP_API}/v1/api/comments`).then(response => {\n      console.log(response.data);\n      setComments(response.data);\n    }).catch(error => {\n      alert(\"Error in fetching Comments Info\", error);\n    });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const deleteComment = async id => {\n    console.log(id);\n    await axios.delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`).then(res => console.log(\"comment deleted\")).catch(err => console.log(err));\n    fetchComments();\n  };\n\n  const postComment = async e => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment\n    };\n    await axios.post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment).then(res => console.log(res.data));\n    console.log(comment);\n    fetchComments();\n  };\n\n  console.log(comment);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: \"chat with your community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: true,\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => postComment(e),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: e => setComment(e.target.value),\n            className: \"\",\n            label: \"Comment\",\n            variant: \"outlined\",\n            color: \"success\",\n            fullWidth: true,\n            required: true,\n            value: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"success\",\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Login to post something\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"comments section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [\" \", comments === null || comments === void 0 ? void 0 : comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minWidth: 275\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: comment === null || comment === void 0 ? void 0 : comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: comment === null || comment === void 0 ? void 0 : comment.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), \" \", isAuthenticated && (user === null || user === void 0 ? void 0 : user._id) === (comment === null || comment === void 0 ? void 0 : comment.user._id) ? /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                value: comment === null || comment === void 0 ? void 0 : comment._id,\n                onClick: () => deleteComment(comment === null || comment === void 0 ? void 0 : comment._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this) : null]\n          }, comment === null || comment === void 0 ? void 0 : comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Connect, \"n8/3FdrurssaYCAobKi1EUKZbfw=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Connect;\nConnect.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect.js"],"names":["React","useEffect","useState","TextField","Button","Card","CardContent","CardActions","Typography","Box","Grid","Container","axios","connect","useSelector","PropTypes","Title","makeStyles","loadUser","updateComments","useStyles","container","border","Connect","auth","isAuthenticated","loading","classes","comment","setComment","comments","setComments","user","state","console","log","dispatch","fetchComments","get","process","env","REACT_APP_API","then","response","data","catch","error","alert","deleteComment","id","delete","res","err","postComment","e","preventDefault","newComment","post","target","value","justifyContent","map","minWidth","username","_id","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Box,\n  Grid,\n} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n//redux and responsive buttons if logged in\nimport { connect, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Title from \"./Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { loadUser } from \"../actions/auth.js\";\nimport { updateComments } from \"../actions/comments\";\n\nconst useStyles = makeStyles({\n  container: {\n    border: \"1px solid black\",\n  },\n});\n\nconst Connect = ({ auth: { isAuthenticated, loading } }) => {\n  const classes = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const { user = {} } = useSelector((state) => state.auth);\n\n  console.log({ user });\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, []);\n\n  const fetchComments = () => {\n    const comments = axios\n      .get(`${process.env.REACT_APP_API}/v1/api/comments`)\n      .then((response) => {\n        console.log(response.data);\n        setComments(response.data);\n      })\n      .catch((error) => {\n        alert(\"Error in fetching Comments Info\", error);\n      });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const deleteComment = async (id) => {\n    console.log(id);\n    await axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`)\n      .then((res) => console.log(\"comment deleted\"))\n      .catch((err) => console.log(err));\n    fetchComments();\n  };\n\n  const postComment = async (e) => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n    };\n    await axios\n      .post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment)\n      .then((res) => console.log(res.data));\n\n    console.log(comment);\n    fetchComments();\n  };\n\n  console.log(comment);\n\n  return (\n    <Grid\n      container\n      direction='row'\n      alignItems='center'\n      justifyContent='center'\n      className={classes.container}\n    >\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n        <Title title={\"chat with your community\"} />{\" \"}\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={12}\n        lg={12}\n        xl={12}\n        direction='column'\n        alignItems='center'\n        justifyContent='center'\n        flex\n\n      >\n        {isAuthenticated ? (\n          <>\n            <h1>Add Comment</h1>\n            <form onSubmit={(e) => postComment(e)}>\n              <TextField\n                onChange={(e) => setComment(e.target.value)}\n                className=''\n                label='Comment'\n                variant='outlined'\n                color='success'\n                fullWidth\n                required\n                value={comment}\n              />\n\n              <Button type='submit' variant='contained' color='success'>\n                Post Comment\n              </Button>\n            </form>\n          </>\n        ) : (\n          <>\n            <Grid item sx={{justifyContent: \"center\"}}>\n              <div>Login to post something</div>\n            </Grid>\n          </>\n        )}\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n        <h1>comments section</h1>\n      </Grid>\n      <Grid item>\n        {\" \"}\n        {comments?.map((comment) => {\n          return (\n            <>\n              <Card sx={{ minWidth: 275 }} key={comment?._id}>\n                <CardContent>\n                  <Typography variant='h5' component='div'>\n                    {comment?.comment}\n                  </Typography>\n                  <Typography variant='h5' component='div'>\n                    {comment?.user.username}\n                  </Typography>\n                </CardContent>{\" \"}\n                {isAuthenticated && user?._id === comment?.user._id ? (\n                  <CardActions>\n                    <Button\n                      type='submit'\n                      value={comment?._id}\n                      onClick={() => deleteComment(comment?._id)}\n                    >\n                      Delete\n                    </Button>\n                  </CardActions>\n                ) : null}\n              </Card>\n            </>\n          );\n        })}{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nConnect.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n"]},"metadata":{},"sourceType":"module"}