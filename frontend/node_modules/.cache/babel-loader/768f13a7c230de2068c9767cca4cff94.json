{"ast":null,"code":"import * as actions from \"../actions/types\";\nconst initialState = {\n  comments: []\n};\nexport default function commentsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.FETCH_COMMENTS:\n      return { ...state,\n        comments: action.payload\n      };\n\n    case actions.ADD_COMMENT:\n      return { ...state,\n        comments: [...state.comments, action.payload]\n      };\n\n    case actions.DELETE_COMMENT:\n      return { ...state,\n        comments: state.comments.filter(comment => comment._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/store/reducers/comments.js"],"names":["actions","initialState","comments","commentsReducer","state","action","type","FETCH_COMMENTS","payload","ADD_COMMENT","DELETE_COMMENT","filter","comment","_id"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGH,YAAjC,EAA+CI,MAA/C,EAAuD;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAO,CAACO,cAAb;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAA7B,OAAP;;AACF,SAAKR,OAAO,CAACS,WAAb;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACG,OAA3B;AAAtB,OAAP;;AACF,SAAKR,OAAO,CAACU,cAAb;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeS,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBR,MAAM,CAACG,OAD5B;AAFL,OAAP;;AAOF;AACE,aAAOJ,KAAP;AAdJ;AAgBD","sourcesContent":["import * as actions from \"../actions/types\";\n\n\nconst initialState = {\n  comments: [],\n};\n\nexport default function commentsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.FETCH_COMMENTS:\n      return { ...state, comments: action.payload };\n    case actions.ADD_COMMENT:\n      return { ...state, comments: [...state.comments, action.payload] };\n    case actions.DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(\n          (comment) => comment._id !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}