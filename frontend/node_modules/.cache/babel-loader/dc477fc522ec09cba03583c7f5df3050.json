{"ast":null,"code":"import { UPDATE_COMMENTS } from \"../actions/types\";\nconst initialState = {\n  comments: [],\n  loading: false,\n  error: null\n};\nexport default function (state = initialState, action) {\n  var _action$payload;\n\n  const {\n    type,\n    payload\n  } = action; //user loaded and auth error\n\n  switch (type) {\n    case UPDATE_COMMENTS:\n      let commentState = { ...state\n      };\n\n      if ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.isAddComment) {\n        commentState.comments = [...commentState.comments, action.payload.comment];\n        console.log('reducer accesed');\n      } else {\n        var _commentState$comment;\n\n        commentState.comments = (_commentState$comment = commentState.comments) === null || _commentState$comment === void 0 ? void 0 : _commentState$comment.filter(comment => comment.id !== action.payload.comment.id);\n      }\n\n      return commentState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/reducers/comments.js"],"names":["UPDATE_COMMENTS","initialState","comments","loading","error","state","action","type","payload","commentState","isAddComment","comment","console","log","filter","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AAAA;;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B,CADqD,CAErD;;AACA,UAAQC,IAAR;AACE,SAAKP,eAAL;AACE,UAAIS,YAAY,GAAG,EAAE,GAAGJ;AAAL,OAAnB;;AACA,6BAAIC,MAAM,CAACE,OAAX,oDAAI,gBAAgBE,YAApB,EAAkC;AAChCD,QAAAA,YAAY,CAACP,QAAb,GAAwB,CAAC,GAAGO,YAAY,CAACP,QAAjB,EAA2BI,MAAM,CAACE,OAAP,CAAeG,OAA1C,CAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OAHD,MAGO;AAAA;;AACLJ,QAAAA,YAAY,CAACP,QAAb,4BAAwBO,YAAY,CAACP,QAArC,0DAAwB,sBAAuBY,MAAvB,CACrBH,OAAD,IAAaA,OAAO,CAACI,EAAR,KAAeT,MAAM,CAACE,OAAP,CAAeG,OAAf,CAAuBI,EAD7B,CAAxB;AAGD;;AACD,aAAON,YAAP;;AAEF;AACE,aAAOJ,KAAP;AAdJ;AAgBD","sourcesContent":["import { UPDATE_COMMENTS } from \"../actions/types\";\n\nconst initialState = {\n  comments: [],\n  loading: false,\n  error: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  //user loaded and auth error\n  switch (type) {\n    case UPDATE_COMMENTS:\n      let commentState = { ...state };\n      if (action.payload?.isAddComment) {\n        commentState.comments = [...commentState.comments, action.payload.comment];\n        console.log('reducer accesed')\n      } else {\n        commentState.comments = commentState.comments?.filter(\n          (comment) => comment.id !== action.payload.comment.id\n        );\n      }\n      return commentState;\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}