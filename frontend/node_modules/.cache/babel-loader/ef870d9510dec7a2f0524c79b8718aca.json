{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect/Connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Card, CardContent, CardActions, Typography, Box, Grid } from \"@material-ui/core\";\nimport axios from \"axios\"; //redux and responsive buttons if logged in\n\nimport Title from \"../../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //redux\n\nimport { loadUser } from \"../../actions/auth.js\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  commentForm: {\n    width: \"90%\",\n    marginTop: \"10px\",\n    textAlign: \"center\"\n  },\n  commentButton: {\n    marginRight: \"10px\"\n  },\n  commentList: {\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: \"auto\"\n  },\n  comment: {\n    borderRadius: \"20px\",\n    margin: \"10px\"\n  },\n  username: {\n    color: \"purple\"\n  },\n  commentText: {\n    marginBottom: \"0px\",\n    fontSize: \"1.7rem\"\n  }\n});\n\nconst Connect = ({\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const {\n    user = {}\n  } = useSelector(state => state.auth);\n  const commentsList = useSelector(state => state.comments);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadUser());\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API}/v1/api/comments`);\n      console.log(response.data);\n      dispatch({\n        type: \"FETCH_COMMENTS\",\n        payload: response.data\n      });\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  };\n\n  const deleteComment = async id => {\n    console.log(id);\n    await axios.delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`).then(res => console.log(\"comment deleted\" + res.data)).catch(err => console.log(err));\n    dispatch({\n      type: \"DELETE_COMMENT\",\n      payload: id\n    });\n  };\n\n  const postComment = async e => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n      username: user.username\n    };\n    await axios.post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment).then(res => console.log(res.data)).catch(err => console.log(err));\n    fetchComments();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      sm: 11,\n      md: 10,\n      maxWidth: \"md\",\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          title: \"chat with your community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: styles.commentForm,\n        children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => postComment(e),\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => setComment(e.target.value),\n              className: \"\",\n              label: \"Comment\",\n              variant: \"outlined\",\n              color: \"success\",\n              fullWidth: true,\n              required: true,\n              value: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"success\",\n              className: styles.commentButton,\n              children: \"Post Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 8,\n            lg: 8,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Login to post something\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: styles.commentList,\n        children: commentsList === null || commentsList === void 0 ? void 0 : commentsList.comments.map(comment => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                minWidth: 275,\n                transform: \"scale(.1)\",\n                mx: \"4px\"\n              },\n              className: styles.comment,\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n                  className: styles.username,\n                  children: [comment === null || comment === void 0 ? void 0 : comment.user.username, \" says...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  className: styles.commentText,\n                  children: comment === null || comment === void 0 ? void 0 : comment.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  value: comment === null || comment === void 0 ? void 0 : comment._id // onClick={() => deleteComment(comment?._id)}\n                  ,\n                  children: \"Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), \" \", isAuthenticated && (user === null || user === void 0 ? void 0 : user._id) === (comment === null || comment === void 0 ? void 0 : comment.user._id) ? /*#__PURE__*/_jsxDEV(CardActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  value: comment === null || comment === void 0 ? void 0 : comment._id,\n                  onClick: () => deleteComment(comment === null || comment === void 0 ? void 0 : comment._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  value: comment === null || comment === void 0 ? void 0 : comment._id // onClick={() => deleteComment(comment?._id)}\n                  ,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this) : null]\n            }, comment === null || comment === void 0 ? void 0 : comment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}; // Connect.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n\n\n_s(Connect, \"g9s80Xw/zQ2GsGr29++Ggz/Hohc=\", false, function () {\n  return [useStyles, useSelector, useSelector, useDispatch];\n});\n\n_c = Connect;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect/Connect.js"],"names":["React","useEffect","useState","TextField","Button","Card","CardContent","CardActions","Typography","Box","Grid","axios","Title","makeStyles","loadUser","connect","useSelector","useDispatch","useStyles","root","flexGrow","container","display","marginLeft","marginRight","width","justifyContent","alignContent","commentForm","marginTop","textAlign","commentButton","commentList","flexDirection","flexBasis","comment","borderRadius","margin","username","color","commentText","marginBottom","fontSize","Connect","auth","isAuthenticated","loading","styles","setComment","comments","setComments","user","state","commentsList","dispatch","fetchComments","response","get","process","env","REACT_APP_API","console","log","data","type","payload","err","deleteComment","id","delete","then","res","catch","postComment","e","preventDefault","newComment","post","target","value","map","minWidth","transform","mx","_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Box,\n  Grid\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n//redux and responsive buttons if logged in\nimport Title from \"../../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//redux\nimport { loadUser } from \"../../actions/auth.js\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  commentForm: {\n    width: \"90%\",\n    marginTop: \"10px\",\n    textAlign: \"center\",\n  },\n  commentButton: {\n    marginRight: \"10px\",\n  },\n  commentList: {\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: \"auto\",\n  },\n  comment: {\n    borderRadius: \"20px\",\n    margin: \"10px\",\n  },\n  username: {\n    color: \"purple\",\n  },\n  commentText: {\n    marginBottom: \"0px\",\n    fontSize: \"1.7rem\",\n  },\n});\n\nconst Connect = ({ auth: { isAuthenticated, loading } }) => {\n  const styles = useStyles();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const { user = {} } = useSelector((state) => state.auth);\n  const commentsList = useSelector((state) => state.comments);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadUser());\n    fetchComments();\n  }, []);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API}/v1/api/comments`\n      );\n      console.log(response.data);\n      dispatch({ type: \"FETCH_COMMENTS\", payload: response.data });\n    } catch (err) {\n      console.log(\"error\", err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    console.log(id);\n    await axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`)\n      .then((res) => console.log(\"comment deleted\" + res.data))\n      .catch((err) => console.log(err));\n    dispatch({ type: \"DELETE_COMMENT\", payload: id });\n  };\n\n  const postComment = async (e) => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment,\n      username: user.username,\n    };\n    await axios\n      .post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment)\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err));\n    fetchComments();\n  };\n\n  return (\n    <div className={styles.root}>\n      <Grid\n        container\n        xs={12}\n        sm={11}\n        md={10}\n        maxWidth='md'\n        className={styles.container}\n      >\n        <Grid item xs={12}>\n          <Title title={\"chat with your community\"} />\n        </Grid>\n        <Grid item className={styles.commentForm}>\n          {isAuthenticated ? (\n            <>\n              <form onSubmit={(e) => postComment(e)}>\n                <TextField\n                  onChange={(e) => setComment(e.target.value)}\n                  className=''\n                  label='Comment'\n                  variant='outlined'\n                  color='success'\n                  fullWidth\n                  required\n                  value={comment}\n                />\n\n                <Button\n                  type='submit'\n                  variant='contained'\n                  color='success'\n                  className={styles.commentButton}\n                >\n                  Post Comment\n                </Button>\n              </form>\n            </>\n          ) : (\n            <>\n              <Grid item xs={12} sm={12} md={8} lg={8} xl={6}>\n                <div>Login to post something</div>\n              </Grid>\n            </>\n          )}\n        </Grid>\n        <Grid item className={styles.commentList}>\n          {commentsList?.comments.map((comment) => {\n            return (\n              <>\n                <Card\n                  sx={{ minWidth: 275, transform: \"scale(.1)\", mx: \"4px\" }}\n                  key={comment?._id}\n                  className={styles.comment}\n                >\n                  <CardContent>\n                    {\" \"}\n                    <Typography className={styles.username}>\n                      {comment?.user.username} says...\n                    </Typography>\n                    <Typography className={styles.commentText}>\n                      {comment?.comment}\n                    </Typography>\n                    <Button\n                        type='submit'\n                        value={comment?._id}\n                        // onClick={() => deleteComment(comment?._id)}\n                      >\n                        Reply\n                      </Button>\n                  </CardContent>{\" \"}\n                  {isAuthenticated && user?._id === comment?.user._id ? (\n                    <CardActions>\n                      <Button\n                        type='submit'\n                        value={comment?._id}\n                        onClick={() => deleteComment(comment?._id)}\n                      >\n                        Delete\n                      </Button>\n                      <Button\n                        type='submit'\n                        value={comment?._id}\n                        // onClick={() => deleteComment(comment?._id)}\n                      >\n                        Edit\n                      </Button>\n                    </CardActions>\n                  ) : null}\n                </Card>\n              </>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\n// Connect.propTypes = {\n//   auth: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(Connect);\n"]},"metadata":{},"sourceType":"module"}