{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography, Grid } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Title from \"../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //redux\n\nimport { login } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\"\n  },\n  form: {},\n  textField: {\n    margin: \"10px\"\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\"\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nconst validationSchema = Yup.object({\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string().min(6).required(\"Please provide a password of at least 6 characters\")\n});\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema,\n    onSubmit: values => {\n      login({\n        email: values.email,\n        password: values.password\n      });\n    }\n  }); //redirect if logged in\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        title: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: formik.handleChange,\n          className: styles.textField,\n          label: \"Email\",\n          id: \"email\",\n          name: \"email\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: formik.values.email,\n          helperText: formik.errors.email && formik.touched.email ? formik.errors.email : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: formik.handleChange,\n          className: styles.textField,\n          label: \"Password\",\n          id: \"password\",\n          name: \"password\",\n          variant: \"outlined\",\n          color: \"success\",\n          fullWidth: true,\n          required: true,\n          value: formik.values.password,\n          helperText: formik.errors.password && formik.touched.password ? formik.errors.password : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          className: styles.formButton,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: styles.registerLine,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), \"Don't have an account?\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(\"/register\"),\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"WbDRIMJySN93vLBZiItACPx0oec=\", false, function () {\n  return [useStyles, useHistory, useFormik];\n});\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Login.js"],"names":["React","useState","Button","TextField","Typography","Grid","Redirect","useHistory","Title","makeStyles","Yup","useFormik","login","connect","PropTypes","useStyles","formContainer","display","marginLeft","marginRight","width","justifyContent","form","textField","margin","formButton","marginTop","registerLine","alignItems","validationSchema","object","email","string","required","password","min","Login","isAuthenticated","styles","history","setEmail","setPassword","formik","initialValues","onSubmit","values","handleSubmit","handleChange","errors","touched","push","propTypes","func","isRequired","bool","mapStateToProps","state","auth","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, TextField, Typography, Grid } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Title from \"../ui/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n//redux\nimport { login } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles({\n  formContainer: {\n    display: \"flex\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  form: {},\n  textField: {\n    margin: \"10px\",\n  },\n  formButton: {\n    marginTop: \"1rem\",\n    width: \"40%\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n  },\n  registerLine: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nconst validationSchema = Yup.object({\n  email: Yup.string().required(\"Please provide an email\"),\n  password: Yup.string()\n    .min(6)\n    .required(\"Please provide a password of at least 6 characters\"),\n});\n\nconst Login = ({ login, isAuthenticated }) => {\n  const styles = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      login({\n        email: values.email,\n        password: values.password,\n      });\n    }\n  });\n  \n  //redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <Grid container spacing={1} direction='column'>\n      <Grid item xs={12}>\n        <Title title={\"login\"} />\n      </Grid>\n      <Grid item xs={12} md={8} className={styles.formContainer}>\n        <form onSubmit={formik.handleSubmit} className={styles.form}>\n          <TextField\n            onChange={formik.handleChange}\n            className={styles.textField}\n            label='Email'\n            id='email'\n            name='email'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.email}\n            helperText={\n              formik.errors.email && formik.touched.email\n                ? formik.errors.email\n                : null\n            }\n\n          />\n          <TextField\n            onChange={formik.handleChange}\n            className={styles.textField}\n            label='Password'\n            id='password'\n            name='password'\n            variant='outlined'\n            color='success'\n            fullWidth\n            required\n            value={formik.values.password}\n            helperText={\n              formik.errors.password && formik.touched.password\n                ? formik.errors.password\n                : null\n            }\n \n          />\n          <Button\n            type='submit'\n            variant='contained'\n            color='success'\n            className={styles.formButton}\n          >\n            Login\n          </Button>\n        </form>\n      </Grid>\n      <Grid item xs={12} className={styles.registerLine}>\n        <Typography />\n        Don't have an account?\n        <Button onClick={() => history.push(\"/register\")}>Register Now</Button>\n        <Typography />{\" \"}\n      </Grid>\n    </Grid>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\nexport default connect(mapStateToProps, { login })(Login);\n"]},"metadata":{},"sourceType":"module"}