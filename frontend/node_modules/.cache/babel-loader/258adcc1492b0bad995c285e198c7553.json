{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: \"none\"\n  }\n}));\n\nfunction SimpleModal() {\n  _s();\n\n  const [open, setOpen] = useState(false); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [modalData, setData] = useState();\n  const data = [{\n    title: \"Payment Terms\",\n    Info: \"Pay me\"\n  }, {\n    title: \"Seller Terms\",\n    Info: \"Pay me now\"\n  }, {\n    title: \"Inspection\",\n    Info: \"Inspection Details\"\n  }, {\n    title: \"Shipping/Pickup\",\n    Info: \"Just come get it\"\n  }];\n\n  const CustomModal = () => {\n    return modalData ? /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          id: \"modal-title\",\n          children: modalData.Info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          id: \"simple-modal-description\",\n          children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  const handleOpen = index => {\n    setOpen(true);\n    setData(data[index]);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map((d, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: \"Click to get the full Modal experience!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          handleOpen(index);\n        },\n        children: d.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CustomModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleModal, \"qsxkR/zRT+N3TQ8cRky6QzPv6co=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleModal;\nexport default SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Modal.js"],"names":["React","useState","makeStyles","Typography","Modal","Button","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","SimpleModal","open","setOpen","modalStyle","modalData","setData","data","title","Info","CustomModal","handleClose","classes","handleOpen","index","map","d"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: \"none\"\n  }\n}));\n\nfunction SimpleModal() {\n  const [open, setOpen] = useState(false);\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [modalData, setData] = useState();\n\n  const data = [\n    {\n      title: \"Payment Terms\",\n      Info: \"Pay me\"\n    },\n    {\n      title: \"Seller Terms\",\n      Info: \"Pay me now\"\n    },\n    {\n      title: \"Inspection\",\n      Info: \"Inspection Details\"\n    },\n    {\n      title: \"Shipping/Pickup\",\n      Info: \"Just come get it\"\n    }\n  ];\n  const CustomModal = () => {\n    return modalData ? (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Typography variant=\"h6\" id=\"modal-title\">\n            {modalData.Info}\n          </Typography>\n          <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n          </Typography>\n          {/* <SimpleModal /> */}\n        </div>\n      </Modal>\n    ) : null;\n  };\n\n  const handleOpen = index => {\n    setOpen(true);\n    setData(data[index]);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n\n  return (\n    <div>\n      {data.map((d, index) => (\n        <div>\n          <Typography gutterBottom>\n            Click to get the full Modal experience!\n          </Typography>\n          <Button\n            onClick={() => {\n              handleOpen(index);\n            }}\n          >\n            {d.title}\n          </Button>\n        </div>\n      ))}\n      <CustomModal />\n    </div>\n  );\n}\n\nexport default SimpleModal;\n"]},"metadata":{},"sourceType":"module"}