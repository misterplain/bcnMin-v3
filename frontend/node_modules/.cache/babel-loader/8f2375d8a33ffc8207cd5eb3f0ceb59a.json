{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Connect = () => {\n  _s();\n\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API}/v1/api/comments`).then(res => setComments(res.data)).catch(err => console.log(err));\n  }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment\n    };\n    await axios.post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment).then(res => setComments([...comments, res.data]));\n    console.log(comment);\n  };\n\n  const deleteComment = async _id => {\n    console.log(id);\n    await axios.delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`).then(res => setComments(res.data)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setComment(e.target.value),\n        className: \"\",\n        label: \"Comment\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"comments section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: () => deleteComment(_id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Connect, \"xIuDHMdq3dbwvU9A7zyaXl7NZRo=\");\n\n_c = Connect;\nexport default Connect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Connect.js"],"names":["React","useEffect","useState","TextField","Button","Container","axios","Connect","comment","setComment","comments","setComments","get","process","env","REACT_APP_API","then","res","data","catch","err","console","log","onSubmit","e","preventDefault","newComment","post","deleteComment","_id","id","delete","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n\nconst Connect = () => {\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  \n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API}/v1/api/comments`)\n      .then((res) => setComments(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setComment(\"\");\n    const newComment = {\n      comment: comment\n    };\n    await axios\n      .post(`${process.env.REACT_APP_API}/v1/api/comments`, newComment)\n      .then((res) => setComments([...comments, res.data]));\n\n    console.log(comment);\n  };\n\n  const deleteComment = async (_id) => {\n    console.log(id);\n    await axios\n      .delete(`${process.env.REACT_APP_API}/v1/api/comments/${id}`)\n      .then((res) => setComments(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Container>\n      <h1>Connect</h1>\n      <h1>Add Comment</h1>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <TextField\n          onChange={(e) => setComment(e.target.value)}\n          className=''\n          label='Comment'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={comment}\n        />\n\n        <Button type='submit' variant='contained' color='secondary'>\n          Post Comment\n        </Button>\n      </form>\n      <h1>comments section</h1>\n      {comments.map((comment) => {\n        return (\n          <>\n            <div key={comment._id}>\n              <h3>{comment.comment}</h3>\n            </div>\n            <Button type='submit' onClick={() => deleteComment(_id)}>\n              Delete\n            </Button>\n          </>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Connect;\n"]},"metadata":{},"sourceType":"module"}