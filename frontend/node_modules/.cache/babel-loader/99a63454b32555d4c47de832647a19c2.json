{"ast":null,"code":"import { UPDATE_COMMENTS } from \"../actions/types\";\nconst initialState = {\n  comments: [],\n  loading: true,\n  error: null\n};\nexport default function (state = initialState, action) {\n  var _action$payload, _action$payload2;\n\n  const {\n    type,\n    payload\n  } = action; //user loaded and auth error\n\n  switch (type) {\n    case UPDATE_COMMENTS:\n      let commentState = { ...state\n      };\n\n      if ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.comments) {\n        commentState.comments = [...commentState.comments, action.payload.comment];\n      } else {\n        var _commentState$comment;\n\n        commentState.comments = (_commentState$comment = commentState.comments) === null || _commentState$comment === void 0 ? void 0 : _commentState$comment.filter(comment => comment.id !== action.payload.comment.id);\n      }\n\n      return commentState;\n\n    case UPDATE_USER:\n      let cloneState = { ...state\n      };\n\n      if ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.isAddToFavorite) {\n        cloneState.user.favorites = [...cloneState.user.favorites, action.payload.blogId];\n      } else {\n        var _cloneState$user$favo;\n\n        cloneState.user.favorites = (_cloneState$user$favo = cloneState.user.favorites) === null || _cloneState$user$favo === void 0 ? void 0 : _cloneState$user$favo.filter((value, index) => value !== action.payload.blogId);\n      }\n\n      return cloneState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/reducers/comments.js"],"names":["UPDATE_COMMENTS","initialState","comments","loading","error","state","action","type","payload","commentState","comment","filter","id","UPDATE_USER","cloneState","isAddToFavorite","user","favorites","blogId","value","index"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AAAA;;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B,CADqD,CAErD;;AACA,UAAQC,IAAR;AACE,SAAKP,eAAL;AACE,UAAIS,YAAY,GAAG,EAAE,GAAGJ;AAAL,OAAnB;;AACA,6BAAIC,MAAM,CAACE,OAAX,oDAAI,gBAAgBN,QAApB,EAA8B;AAC5BO,QAAAA,YAAY,CAACP,QAAb,GAAwB,CAAC,GAAGO,YAAY,CAACP,QAAjB,EAA2BI,MAAM,CAACE,OAAP,CAAeE,OAA1C,CAAxB;AACD,OAFD,MAEO;AAAA;;AACLD,QAAAA,YAAY,CAACP,QAAb,4BAAwBO,YAAY,CAACP,QAArC,0DAAwB,sBAAuBS,MAAvB,CACrBD,OAAD,IAAaA,OAAO,CAACE,EAAR,KAAeN,MAAM,CAACE,OAAP,CAAeE,OAAf,CAAuBE,EAD7B,CAAxB;AAGD;;AACD,aAAOH,YAAP;;AAEF,SAAKI,WAAL;AACE,UAAIC,UAAU,GAAG,EAAE,GAAGT;AAAL,OAAjB;;AACA,8BAAIC,MAAM,CAACE,OAAX,qDAAI,iBAAgBO,eAApB,EAAqC;AACnCD,QAAAA,UAAU,CAACE,IAAX,CAAgBC,SAAhB,GAA4B,CAC1B,GAAGH,UAAU,CAACE,IAAX,CAAgBC,SADO,EAE1BX,MAAM,CAACE,OAAP,CAAeU,MAFW,CAA5B;AAID,OALD,MAKO;AAAA;;AACLJ,QAAAA,UAAU,CAACE,IAAX,CAAgBC,SAAhB,4BAA4BH,UAAU,CAACE,IAAX,CAAgBC,SAA5C,0DAA4B,sBAA2BN,MAA3B,CAC1B,CAACQ,KAAD,EAAQC,KAAR,KAAkBD,KAAK,KAAKb,MAAM,CAACE,OAAP,CAAeU,MADjB,CAA5B;AAGD;;AACD,aAAOJ,UAAP;;AAEF;AACE,aAAOT,KAAP;AA3BJ;AA6BD","sourcesContent":["import { UPDATE_COMMENTS } from \"../actions/types\";\n\nconst initialState = {\n  comments: [],\n  loading: true,\n  error: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  //user loaded and auth error\n  switch (type) {\n    case UPDATE_COMMENTS:\n      let commentState = { ...state };\n      if (action.payload?.comments) {\n        commentState.comments = [...commentState.comments, action.payload.comment];\n      } else {\n        commentState.comments = commentState.comments?.filter(\n          (comment) => comment.id !== action.payload.comment.id\n        );\n      }\n      return commentState;\n\n    case UPDATE_USER:\n      let cloneState = { ...state };\n      if (action.payload?.isAddToFavorite) {\n        cloneState.user.favorites = [\n          ...cloneState.user.favorites,\n          action.payload.blogId,\n        ];\n      } else {\n        cloneState.user.favorites = cloneState.user.favorites?.filter(\n          (value, index) => value !== action.payload.blogId\n        );\n      }\n      return cloneState;\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}