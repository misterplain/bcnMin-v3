{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { makeStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\"; //redux\n\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport { register } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleSubmit = async e => {\n    console.log(username, email, password);\n    e.preventDefault();\n\n    if (username === \"\") {\n      setUsernameError(true);\n    }\n\n    if (email === \"\") {\n      setEmailError(true);\n    }\n\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n\n    register({\n      username,\n      email,\n      password\n    });\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/inform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setUsername(e.target.value),\n        className: \"\",\n        label: \"Username\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        value: username,\n        error: usernameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setEmail(e.target.value),\n        className: \"\",\n        label: \"Email\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        value: email,\n        error: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => setPassword(e.target.value),\n        className: \"\",\n        label: \"Password\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        value: password,\n        error: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"Oc9L64Xcd7atk7L+RV6w6J25iI4=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Register.js"],"names":["React","useState","Redirect","Typography","Button","Container","KeyboardArrowRightIcon","makeStyles","TextField","connect","setAlert","register","PropTypes","Register","isAuthenticated","username","setUsername","email","setEmail","password","setPassword","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","handleSubmit","e","console","log","preventDefault","target","value","propTypes","func","isRequired","bool","mapStateToProps","state","auth","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { makeStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n//redux\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport { register } from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    console.log(username, email, password);\n    e.preventDefault();\n    if (username === \"\") {\n      setUsernameError(true);\n    }\n    if (email === \"\") {\n      setEmailError(true);\n    }\n    if (password === \"\") {\n      setPasswordError(true);\n    }\n    register({ username, email, password });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/inform' />;\n  }\n\n  return (\n    <Container size='sm'>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setUsername(e.target.value)}\n          className=''\n          label='Username'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={username}\n          error={usernameError}\n        />\n        <TextField\n          onChange={(e) => setEmail(e.target.value)}\n          className=''\n          label='Email'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={email}\n          error={emailError}\n        />\n        <TextField\n          onChange={(e) => setPassword(e.target.value)}\n          className=''\n          label='Password'\n          variant='outlined'\n          color='secondary'\n          fullWidth\n          required\n          value={password}\n          error={passwordError}\n        />\n        <Button type='submit' variant='contained' color='secondary'>\n          Register\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}