{"ast":null,"code":"import * as actions from './types';\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  //make sure that when we load a user the loading is done, once we receive a response we'll set this to false\n  loading: true,\n  user: null\n};\nexport default function (state = initialState, action) {\n  var _action$payload;\n\n  const {\n    type,\n    payload\n  } = action; //user loaded and auth error\n\n  switch (type) {\n    case actions.USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case actions.REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case actions.LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case actions.REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case actions.LOGIN_FAIL:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case actions.AUTH_ERROR:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        isAuthenticated: false,\n        loading: false,\n        token: null\n      };\n\n    case actions.LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        isAuthenticated: false,\n        loading: false,\n        token: null\n      };\n\n    case actions.UPDATE_USER:\n      let cloneState = { ...state\n      };\n\n      if ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.isAddToFavorite) {\n        cloneState.user.favorites = [...cloneState.user.favorites, action.payload.blogId];\n      } else {\n        var _cloneState$user$favo;\n\n        cloneState.user.favorites = (_cloneState$user$favo = cloneState.user.favorites) === null || _cloneState$user$favo === void 0 ? void 0 : _cloneState$user$favo.filter((value, index) => value !== action.payload.blogId);\n      }\n\n      return cloneState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/store/reducers/auth.js"],"names":["actions","initialState","token","localStorage","getItem","isAuthenticated","loading","user","state","action","type","payload","USER_LOADED","REGISTER_SUCCESS","setItem","LOGIN_SUCCESS","REGISTER_FAIL","removeItem","LOGIN_FAIL","AUTH_ERROR","LOGOUT","UPDATE_USER","cloneState","isAddToFavorite","favorites","blogId","filter","value","index"],"mappings":"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","sourcesContent":["import * as actions from './types';\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  //make sure that when we load a user the loading is done, once we receive a response we'll set this to false\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  //user loaded and auth error\n  switch (type) {\n    case actions.USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n\n    case actions.REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case actions.LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case actions.REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case actions.LOGIN_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case actions.AUTH_ERROR:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: false,\n        token: null,\n      };\n\n    case actions.LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: false,\n        token: null,\n      };\n\n    case actions.UPDATE_USER:\n      let cloneState = { ...state };\n      if (action.payload?.isAddToFavorite) {\n        cloneState.user.favorites = [\n          ...cloneState.user.favorites,\n          action.payload.blogId,\n        ];\n      } else {\n        cloneState.user.favorites = cloneState.user.favorites?.filter(\n          (value, index) => value !== action.payload.blogId\n        );\n      }\n      return cloneState;\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}