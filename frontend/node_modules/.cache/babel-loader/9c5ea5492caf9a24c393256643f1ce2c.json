{"ast":null,"code":"var _jsxFileName = \"/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab/Collab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { COLLAB } from \"../../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, Fade, Box, Typography, TextField, FormGroup, FormControlLabel, FormControl, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"../../ui/Modal\"; //redux\n\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst collab = COLLAB;\nconst createStyles = makeStyles({\n  container: {\n    border: \"1px solid orange\",\n    width: \"100%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  formContainer: {\n    width: \"70%\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"90%\",\n    border: \"1px solid red\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  collabList: {\n    width: \"90%\",\n    border: \"1px solid blue\"\n  }\n}); //modal style\n\nconst style = {\n  position: \"rela\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().min(3, \"Your name should have more than 3 characters\").required(\"Required\"),\n  phoneNum: Yup.string().min(9, \"Phone number should have more than 3 characters, please include country code\").required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string().min(2, \"You can do better than that\").required(\"Required\")\n});\n\nconst Collab = props => {\n  _s();\n\n  const styles = createStyles();\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\"\n    },\n    validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message\n      });\n      console.log(values);\n      resetForm();\n    }\n  }); //modal state\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: styles.container,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        className: styles.formContainer,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          className: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"name\",\n                label: \"Name\",\n                variant: \"outlined\",\n                color: \"success\",\n                fullWidth: true,\n                value: formik.values.name,\n                onChange: formik.handleChange,\n                className: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), formik.errors.name && formik.touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__errors\",\n              children: formik.errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this) : null, /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  name: \"phoneNum\",\n                  label: \"Phone Number (optional)\",\n                  variant: \"outlined\",\n                  color: \"success\",\n                  fullWidth: true,\n                  value: formik.values.phoneNum,\n                  onChange: formik.handleChange,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  name: \"email\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  color: \"success\",\n                  fullWidth: true,\n                  value: formik.values.email,\n                  onChange: formik.handleChange,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"collab__errors\",\n                children: formik.errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"text\",\n                  name: \"message\",\n                  label: \"Enter your message here\",\n                  rows: \"4\",\n                  Multiline: true,\n                  variant: \"outlined\",\n                  color: \"success\",\n                  fullWidth: true,\n                  value: formik.values.message,\n                  onChange: formik.handleChange,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), formik.errors.message && formik.touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"collab__errors\",\n                children: formik.errors.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: handleOpen,\n            children: \"Submit feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: styles.collabList,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collab__list\",\n          children: collab.map(collab => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collab__list-card\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: collab.src,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"collab__list-card-text\",\n                  children: collab.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)\n            }, collab.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        setOpen: setOpen,\n        onClose: () => setOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: open,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: style,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              id: \"transition-modal-title\",\n              variant: \"h6\",\n              component: \"h2\",\n              children: \"Your water footprint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              id: \"transition-modal-description\",\n              sx: {\n                mt: 2\n              },\n              children: \"Your weekly water footprint is year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Collab, \"7USLNZxSNCitMnaiSNUniRNEbbo=\", false, function () {\n  return [useFormik];\n});\n\n_c = Collab;\nexport default connect(null)(Collab);\n\nvar _c;\n\n$RefreshReg$(_c, \"Collab\");","map":{"version":3,"sources":["/Users/patrick/Desktop/Learn/Projects/3-bcnMin-v3/client/src/pages/Collab/Collab.js"],"names":["React","useState","COLLAB","useFormik","Yup","Button","Fade","Box","Typography","TextField","FormGroup","FormControlLabel","FormControl","Grid","makeStyles","Modal","connect","collab","createStyles","container","border","width","display","flexWrap","justifyContent","alignItems","formContainer","form","flexDirection","collabList","style","position","top","left","transform","bgcolor","boxShadow","p","validationSchema","object","name","string","min","required","phoneNum","email","message","Collab","props","styles","contact","setContact","formik","initialValues","onSubmit","values","resetForm","console","log","open","setOpen","handleOpen","handleClose","triggerAlert","setAlert","handleSubmit","handleChange","errors","touched","map","src","id","mt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { COLLAB } from \"../../shared/collab\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Button,\n  Fade,\n  Box,\n  Typography,\n  TextField,\n  FormGroup,\n  FormControlLabel,\n  FormControl,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"../../ui/Modal\";\n//redux\nimport { connect } from \"react-redux\";\n\nconst collab = COLLAB;\n\nconst createStyles = makeStyles({\n  container: {\n    border: \"1px solid orange\",\n    width: \"100%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  formContainer: {\n    width: \"70%\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"90%\",\n    border: \"1px solid red\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  collabList: {\n    width: \"90%\",\n    border: \"1px solid blue\",\n  },\n});\n\n//modal style\nconst style = {\n  position: \"rela\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Your name should have more than 3 characters\")\n    .required(\"Required\"),\n  phoneNum: Yup.string()\n    .min(\n      9,\n      \"Phone number should have more than 3 characters, please include country code\"\n    )\n    .required(\"Required\"),\n  email: Yup.string().min(3, \"Too short\").required(\"Required\"),\n  message: Yup.string()\n    .min(2, \"You can do better than that\")\n    .required(\"Required\"),\n});\n\nconst Collab = (props) => {\n  const styles = createStyles();\n  const [contact, setContact] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      phoneNum: \"\",\n      email: \"\",\n      message: \"\",\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      setContact({\n        name: values.name,\n        phoneNum: values.phoneNum,\n        email: values.email,\n        message: values.message,\n      });\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  //modal state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const triggerAlert = () => {\n    props.setAlert(\"THIS IS AN ALERT TEST AND IT WORKED!\", \"success\");\n  };\n  return (\n    <>\n      <Grid container className={styles.container} xs={12} sm={12} md={12}>\n        <Grid item xs={12} sm={12} md={12} className={styles.formContainer}>\n          <form onSubmit={formik.handleSubmit} className={styles.form}>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <TextField\n                    name='name'\n                    label='Name'\n                    variant='outlined'\n                    color='success'\n                    fullWidth\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    className=''\n                  />\n                }\n              />\n\n              {formik.errors.name && formik.touched.name ? (\n                <div className='collab__errors'>{formik.errors.name}</div>\n              ) : null}\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <TextField\n                      type='number'\n                      name='phoneNum'\n                      label='Phone Number (optional)'\n                      variant='outlined'\n                      color='success'\n                      fullWidth\n                      value={formik.values.phoneNum}\n                      onChange={formik.handleChange}\n                      className='form-control'\n                    />\n                  }\n                />\n\n                {/* {formik.errors.phoneNum && formik.touched.phoneNum ? (\n                <div className=\"collab__errors\">{formik.errors.phoneNum}</div>\n              ) : null} */}\n              </FormGroup>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <TextField\n                      type='text'\n                      name='email'\n                      label='Email'\n                      variant='outlined'\n                      color='success'\n                      fullWidth\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                      className='form-control'\n                    />\n                  }\n                />\n\n                {formik.errors.email && formik.touched.email ? (\n                  <div className='collab__errors'>{formik.errors.email}</div>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <TextField\n                      type='text'\n                      name='message'\n                      label='Enter your message here'\n                      rows='4'\n                      Multiline={true}\n                      variant='outlined'\n                      color='success'\n                      fullWidth\n                      value={formik.values.message}\n                      onChange={formik.handleChange}\n                      className='form-control'\n                    />\n                  }\n                />\n\n                {formik.errors.message && formik.touched.message ? (\n                  <div className='collab__errors'>{formik.errors.message}</div>\n                ) : null}\n              </FormGroup>\n            </FormGroup>\n\n            <Button type='submit' onClick={handleOpen}>\n              Submit feedback\n            </Button>\n          </form>\n        </Grid>\n        <Grid item className={styles.collabList}>\n          <div className='collab__list'>\n            {collab.map((collab) => {\n              return (\n                <div key={collab.id} className='collab__list-card'>\n                  <a href={collab.src} target='_blank' rel='noreferrer'>\n                    <p className='collab__list-card-text'>{collab.name}</p>\n                  </a>\n                </div>\n              );\n            })}\n          </div>\n        </Grid>\n        <Modal open={open} setOpen={setOpen} onClose={() => setOpen(false)}>\n          <Fade in={open}>\n            <Box sx={style}>\n              <Typography\n                id='transition-modal-title'\n                variant='h6'\n                component='h2'\n              >\n                Your water footprint\n              </Typography>\n              <Typography id='transition-modal-description' sx={{ mt: 2 }}>\n                Your weekly water footprint is year\n              </Typography>\n            </Box>\n          </Fade>\n        </Modal>\n      </Grid>\n    </>\n  );\n};\n\nexport default connect(null)(Collab);\n"]},"metadata":{},"sourceType":"module"}